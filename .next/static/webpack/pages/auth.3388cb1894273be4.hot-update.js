"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/auth",{

/***/ "./node_modules/@firebase/auth-compat/dist/index.esm2017.js":
/*!******************************************************************!*\
  !*** ./node_modules/@firebase/auth-compat/dist/index.esm2017.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app-compat */ \"./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/auth/internal */ \"./node_modules/@firebase/auth/dist/esm2017/internal.js\");\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n\n\n\n\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.2.4\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.getUA)()) {\r\n    return !!((_getCurrentScheme() === 'file:' || _getCurrentScheme() === 'ionic:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isReactNative)() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isNode)();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isIE)() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.getUA)()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.getUA)()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isIndexedDBAvailable)();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isIndexedDBAvailable)();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof __webpack_require__.g !== 'undefined' &&\r\n        'WorkerGlobalScope' in __webpack_require__.g &&\r\n        'importScripts' in __webpack_require__.g);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isBrowserExtension)() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isReactNative)()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isNode)()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && (0,_firebase_util__WEBPACK_IMPORTED_MODULE_3__.isIndexedDBAvailable)()), auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const win = getSelfWindow();\r\n    const key = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (win === null || win === void 0 ? void 0 : win.sessionStorage) {\r\n        win.sessionStorage.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const win = getSelfWindow();\r\n    if (!(win === null || win === void 0 ? void 0 : win.sessionStorage)) {\r\n        return [];\r\n    }\r\n    const key = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = win.sessionStorage.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.indexedDBLocalPersistence, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\nfunction getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._getInstance(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserPopupRedirectResolver);\r\n        this.cordovaResolver = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._getInstance(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserSessionPersistence;\r\n        this._completeRedirectFn = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._getRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if (e.code === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_3__.FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_3__.FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ProviderId.GOOGLE:\r\n            provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.GoogleAuthProvider;\r\n            break;\r\n        case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ProviderId.FACEBOOK:\r\n            provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.FacebookAuthProvider;\r\n            break;\r\n        case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ProviderId.GITHUB:\r\n            provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.GithubAuthProvider;\r\n            break;\r\n        case _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ProviderId.TWITTER:\r\n            provider = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_3__.FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_3__.FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._castAuth(this.auth));\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._castAuth(this.auth));\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        let persistences = [_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.inMemoryPersistence];\r\n        // Only deal with persistences in web environments\r\n        if (typeof window !== 'undefined') {\r\n            // Note this is slightly different behavior: in this case, the stored\r\n            // persistence is checked *first* rather than last. This is because we want\r\n            // to prefer stored persistence type in the hierarchy.\r\n            persistences = _getPersistencesFromRedirect(apiKey, app.name);\r\n            for (const persistence of [\r\n                _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.indexedDBLocalPersistence,\r\n                _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserLocalPersistence,\r\n                _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserSessionPersistence\r\n            ]) {\r\n                if (!persistences.includes(persistence)) {\r\n                    persistences.push(persistence);\r\n                }\r\n            }\r\n        }\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: persistences,\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        const credential = await _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._getInstance(_firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.indexedDBLocalPersistence\r\n                    : _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._fail(\"argument-error\" /* ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.PhoneAuthProvider(unwrap(_firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__[\"default\"].auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = _firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__[\"default\"].app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.RecaptchaVerifier(container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters, \r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth());\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_2__.Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.EmailAuthProvider,\r\n        FacebookAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.FacebookAuthProvider,\r\n        GithubAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.GithubAuthProvider,\r\n        GoogleAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.GoogleAuthProvider,\r\n        OAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.OAuthProvider,\r\n        SAMLAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: _firebase_auth_internal__WEBPACK_IMPORTED_MODULE_1__.AuthCredential,\r\n        Error: _firebase_util__WEBPACK_IMPORTED_MODULE_3__.FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(_firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n//# sourceMappingURL=index.esm2017.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@firebase/auth-compat/dist/index.esm2017.js\n");

/***/ }),

/***/ "./node_modules/@firebase/auth/dist/esm2017/internal.js":
/*!**************************************************************!*\
  !*** ./node_modules/@firebase/auth/dist/esm2017/internal.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ActionCodeOperation\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.A; },\n/* harmony export */   \"ActionCodeURL\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ac; },\n/* harmony export */   \"AuthCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.G; },\n/* harmony export */   \"AuthErrorCodes\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.C; },\n/* harmony export */   \"AuthImpl\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aE; },\n/* harmony export */   \"AuthPopup\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aH; },\n/* harmony export */   \"EmailAuthCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.H; },\n/* harmony export */   \"EmailAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.L; },\n/* harmony export */   \"FacebookAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.M; },\n/* harmony export */   \"FactorId\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.F; },\n/* harmony export */   \"FetchProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aI; },\n/* harmony export */   \"GithubAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.Q; },\n/* harmony export */   \"GoogleAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.N; },\n/* harmony export */   \"OAuthCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.I; },\n/* harmony export */   \"OAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.T; },\n/* harmony export */   \"OperationType\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.O; },\n/* harmony export */   \"PhoneAuthCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.J; },\n/* harmony export */   \"PhoneAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.P; },\n/* harmony export */   \"PhoneMultiFactorGenerator\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.m; },\n/* harmony export */   \"ProviderId\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.o; },\n/* harmony export */   \"RecaptchaVerifier\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.R; },\n/* harmony export */   \"SAMLAuthCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aJ; },\n/* harmony export */   \"SAMLAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.U; },\n/* harmony export */   \"SignInMethod\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.S; },\n/* harmony export */   \"TwitterAuthProvider\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.V; },\n/* harmony export */   \"UserImpl\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aD; },\n/* harmony export */   \"_assert\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aw; },\n/* harmony export */   \"_castAuth\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aC; },\n/* harmony export */   \"_fail\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.as; },\n/* harmony export */   \"_generateEventId\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aG; },\n/* harmony export */   \"_getClientVersion\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aF; },\n/* harmony export */   \"_getInstance\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ax; },\n/* harmony export */   \"_getRedirectResult\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aA; },\n/* harmony export */   \"_persistenceKeyName\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ay; },\n/* harmony export */   \"applyActionCode\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a1; },\n/* harmony export */   \"browserLocalPersistence\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.b; },\n/* harmony export */   \"browserPopupRedirectResolver\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.k; },\n/* harmony export */   \"browserSessionPersistence\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a; },\n/* harmony export */   \"checkActionCode\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a2; },\n/* harmony export */   \"confirmPasswordReset\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a0; },\n/* harmony export */   \"connectAuthEmulator\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.E; },\n/* harmony export */   \"createUserWithEmailAndPassword\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a4; },\n/* harmony export */   \"debugErrorMap\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.z; },\n/* harmony export */   \"deleteUser\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.y; },\n/* harmony export */   \"fetchSignInMethodsForEmail\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a9; },\n/* harmony export */   \"getAdditionalUserInfo\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ak; },\n/* harmony export */   \"getAuth\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.n; },\n/* harmony export */   \"getIdToken\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ah; },\n/* harmony export */   \"getIdTokenResult\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ai; },\n/* harmony export */   \"getMultiFactorResolver\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.am; },\n/* harmony export */   \"getRedirectResult\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.j; },\n/* harmony export */   \"inMemoryPersistence\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.K; },\n/* harmony export */   \"indexedDBLocalPersistence\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.i; },\n/* harmony export */   \"initializeAuth\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.D; },\n/* harmony export */   \"isSignInWithEmailLink\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a7; },\n/* harmony export */   \"linkWithCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.Y; },\n/* harmony export */   \"linkWithPhoneNumber\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.l; },\n/* harmony export */   \"linkWithPopup\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.d; },\n/* harmony export */   \"linkWithRedirect\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.g; },\n/* harmony export */   \"multiFactor\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.an; },\n/* harmony export */   \"onAuthStateChanged\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.t; },\n/* harmony export */   \"onIdTokenChanged\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.q; },\n/* harmony export */   \"parseActionCodeURL\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ad; },\n/* harmony export */   \"prodErrorMap\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.B; },\n/* harmony export */   \"reauthenticateWithCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.Z; },\n/* harmony export */   \"reauthenticateWithPhoneNumber\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.r; },\n/* harmony export */   \"reauthenticateWithPopup\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.e; },\n/* harmony export */   \"reauthenticateWithRedirect\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.h; },\n/* harmony export */   \"reload\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.al; },\n/* harmony export */   \"sendEmailVerification\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aa; },\n/* harmony export */   \"sendPasswordResetEmail\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.$; },\n/* harmony export */   \"sendSignInLinkToEmail\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a6; },\n/* harmony export */   \"setPersistence\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.p; },\n/* harmony export */   \"signInAnonymously\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.W; },\n/* harmony export */   \"signInWithCredential\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.X; },\n/* harmony export */   \"signInWithCustomToken\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__._; },\n/* harmony export */   \"signInWithEmailAndPassword\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a5; },\n/* harmony export */   \"signInWithEmailLink\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a8; },\n/* harmony export */   \"signInWithPhoneNumber\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.s; },\n/* harmony export */   \"signInWithPopup\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.c; },\n/* harmony export */   \"signInWithRedirect\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.f; },\n/* harmony export */   \"signOut\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.x; },\n/* harmony export */   \"unlink\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aj; },\n/* harmony export */   \"updateCurrentUser\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.w; },\n/* harmony export */   \"updateEmail\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.af; },\n/* harmony export */   \"updatePassword\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ag; },\n/* harmony export */   \"updatePhoneNumber\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.u; },\n/* harmony export */   \"updateProfile\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ae; },\n/* harmony export */   \"useDeviceLanguage\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.v; },\n/* harmony export */   \"verifyBeforeUpdateEmail\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ab; },\n/* harmony export */   \"verifyPasswordResetCode\": function() { return /* reexport safe */ _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a3; },\n/* harmony export */   \"addFrameworkForLogging\": function() { return /* binding */ addFrameworkForLogging; },\n/* harmony export */   \"cordovaPopupRedirectResolver\": function() { return /* binding */ cordovaPopupRedirectResolver; }\n/* harmony export */ });\n/* harmony import */ var _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-839de510.js */ \"./node_modules/@firebase/auth/dist/esm2017/index-839de510.js\");\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/logger */ \"./node_modules/@firebase/logger/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/esm/index.esm2017.js\");\n\n\n\n\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ap)(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if ((0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aq)()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if ((0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ar)()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.as)(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.at)(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if ((0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aq)()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if ((0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ar)()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.as)(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.au)(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ao)() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject((0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.av)(auth, \"redirect-cancelled-by-user\" /* REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if ((0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ar)()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aw)(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aw)(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aw)(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aw)(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aw)(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ap)(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.az {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.av)(auth, \"no-auth-event\" /* NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.av)(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ax)(_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.b);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.ay)(\"authEvent\" /* AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.querystringDecode)(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.a;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aA;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.as)(auth, \"operation-not-supported-in-this-environment\" /* OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aB)();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.av)(\"no-auth-event\" /* NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    (0,_index_839de510_js__WEBPACK_IMPORTED_MODULE_0__.aC)(auth)._logFramework(framework);\r\n}\n\n\n//# sourceMappingURL=internal.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL2F1dGgvZGlzdC9lc20yMDE3L2ludGVybmFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdaO0FBQ3N5RDtBQUMzb0U7QUFDNUI7QUFDUjtBQUNXO0FBQ0c7O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksWUFBWTtBQUN4QixJQUFJLHNEQUFXO0FBQ2Y7QUFDQTtBQUNBLFFBQVEsc0RBQU07QUFDZDtBQUNBO0FBQ0E7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzREFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxZQUFZO0FBQ3hCO0FBQ0EsUUFBUSxzREFBTTtBQUNkO0FBQ0E7QUFDQSxhQUFhLHNEQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQUs7QUFDYjtBQUNBO0FBQ0EsVUFBVSxzREFBaUI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0Qsc0RBQVU7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHNEQUFZO0FBQ3ZDLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFVO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHNEQUFPO0FBQ1g7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJLHNEQUFPO0FBQ1g7QUFDQSxLQUFLO0FBQ0w7QUFDQSxJQUFJLHNEQUFPO0FBQ1g7QUFDQSxLQUFLO0FBQ0wsSUFBSSxzREFBTztBQUNYO0FBQ0EsS0FBSztBQUNMO0FBQ0EsSUFBSSxzREFBTztBQUNYO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzREFBVztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxrREFBZ0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsZ0JBQWdCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0RBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHVCQUF1QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHNEQUFZLENBQUMsaURBQXVCO0FBQy9DO0FBQ0E7QUFDQSxXQUFXLHNEQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUVBQWlCO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsaURBQXlCO0FBQzdELDRDQUE0QztBQUM1QztBQUNBO0FBQ0EsbUNBQW1DLGtEQUFrQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkNBQTJDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsb0NBQW9DO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLEtBQUs7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZCQUE2QjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVk7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzREFBUztBQUNiOztBQUVnRTtBQUNoRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL2F1dGgvZGlzdC9lc20yMDE3L2ludGVybmFsLmpzP2FhNmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYW8gYXMgX2lzSU9TN09yOCwgYXAgYXMgZGVidWdBc3NlcnQsIGFxIGFzIF9pc0lPUywgYXIgYXMgX2lzQW5kcm9pZCwgYXMgYXMgX2ZhaWwsIGF0IGFzIF9nZXRSZWRpcmVjdFVybCwgYXUgYXMgX2dldFByb2plY3RDb25maWcsIGF2IGFzIF9jcmVhdGVFcnJvciwgYXcgYXMgX2Fzc2VydCwgYXggYXMgX2dldEluc3RhbmNlLCBiIGFzIGJyb3dzZXJMb2NhbFBlcnNpc3RlbmNlLCBheSBhcyBfcGVyc2lzdGVuY2VLZXlOYW1lLCBheiBhcyBBdXRoRXZlbnRNYW5hZ2VyLCBhIGFzIGJyb3dzZXJTZXNzaW9uUGVyc2lzdGVuY2UsIGFBIGFzIF9nZXRSZWRpcmVjdFJlc3VsdCwgYUIgYXMgX2NsZWFyUmVkaXJlY3RPdXRjb21lcywgYUMgYXMgX2Nhc3RBdXRoIH0gZnJvbSAnLi9pbmRleC04MzlkZTUxMC5qcyc7XG5leHBvcnQgeyBBIGFzIEFjdGlvbkNvZGVPcGVyYXRpb24sIGFjIGFzIEFjdGlvbkNvZGVVUkwsIEcgYXMgQXV0aENyZWRlbnRpYWwsIEMgYXMgQXV0aEVycm9yQ29kZXMsIGFFIGFzIEF1dGhJbXBsLCBhSCBhcyBBdXRoUG9wdXAsIEggYXMgRW1haWxBdXRoQ3JlZGVudGlhbCwgTCBhcyBFbWFpbEF1dGhQcm92aWRlciwgTSBhcyBGYWNlYm9va0F1dGhQcm92aWRlciwgRiBhcyBGYWN0b3JJZCwgYUkgYXMgRmV0Y2hQcm92aWRlciwgUSBhcyBHaXRodWJBdXRoUHJvdmlkZXIsIE4gYXMgR29vZ2xlQXV0aFByb3ZpZGVyLCBJIGFzIE9BdXRoQ3JlZGVudGlhbCwgVCBhcyBPQXV0aFByb3ZpZGVyLCBPIGFzIE9wZXJhdGlvblR5cGUsIEogYXMgUGhvbmVBdXRoQ3JlZGVudGlhbCwgUCBhcyBQaG9uZUF1dGhQcm92aWRlciwgbSBhcyBQaG9uZU11bHRpRmFjdG9yR2VuZXJhdG9yLCBvIGFzIFByb3ZpZGVySWQsIFIgYXMgUmVjYXB0Y2hhVmVyaWZpZXIsIGFKIGFzIFNBTUxBdXRoQ3JlZGVudGlhbCwgVSBhcyBTQU1MQXV0aFByb3ZpZGVyLCBTIGFzIFNpZ25Jbk1ldGhvZCwgViBhcyBUd2l0dGVyQXV0aFByb3ZpZGVyLCBhRCBhcyBVc2VySW1wbCwgYXcgYXMgX2Fzc2VydCwgYUMgYXMgX2Nhc3RBdXRoLCBhcyBhcyBfZmFpbCwgYUcgYXMgX2dlbmVyYXRlRXZlbnRJZCwgYUYgYXMgX2dldENsaWVudFZlcnNpb24sIGF4IGFzIF9nZXRJbnN0YW5jZSwgYUEgYXMgX2dldFJlZGlyZWN0UmVzdWx0LCBheSBhcyBfcGVyc2lzdGVuY2VLZXlOYW1lLCBhMSBhcyBhcHBseUFjdGlvbkNvZGUsIGIgYXMgYnJvd3NlckxvY2FsUGVyc2lzdGVuY2UsIGsgYXMgYnJvd3NlclBvcHVwUmVkaXJlY3RSZXNvbHZlciwgYSBhcyBicm93c2VyU2Vzc2lvblBlcnNpc3RlbmNlLCBhMiBhcyBjaGVja0FjdGlvbkNvZGUsIGEwIGFzIGNvbmZpcm1QYXNzd29yZFJlc2V0LCBFIGFzIGNvbm5lY3RBdXRoRW11bGF0b3IsIGE0IGFzIGNyZWF0ZVVzZXJXaXRoRW1haWxBbmRQYXNzd29yZCwgeiBhcyBkZWJ1Z0Vycm9yTWFwLCB5IGFzIGRlbGV0ZVVzZXIsIGE5IGFzIGZldGNoU2lnbkluTWV0aG9kc0ZvckVtYWlsLCBhayBhcyBnZXRBZGRpdGlvbmFsVXNlckluZm8sIG4gYXMgZ2V0QXV0aCwgYWggYXMgZ2V0SWRUb2tlbiwgYWkgYXMgZ2V0SWRUb2tlblJlc3VsdCwgYW0gYXMgZ2V0TXVsdGlGYWN0b3JSZXNvbHZlciwgaiBhcyBnZXRSZWRpcmVjdFJlc3VsdCwgSyBhcyBpbk1lbW9yeVBlcnNpc3RlbmNlLCBpIGFzIGluZGV4ZWREQkxvY2FsUGVyc2lzdGVuY2UsIEQgYXMgaW5pdGlhbGl6ZUF1dGgsIGE3IGFzIGlzU2lnbkluV2l0aEVtYWlsTGluaywgWSBhcyBsaW5rV2l0aENyZWRlbnRpYWwsIGwgYXMgbGlua1dpdGhQaG9uZU51bWJlciwgZCBhcyBsaW5rV2l0aFBvcHVwLCBnIGFzIGxpbmtXaXRoUmVkaXJlY3QsIGFuIGFzIG11bHRpRmFjdG9yLCB0IGFzIG9uQXV0aFN0YXRlQ2hhbmdlZCwgcSBhcyBvbklkVG9rZW5DaGFuZ2VkLCBhZCBhcyBwYXJzZUFjdGlvbkNvZGVVUkwsIEIgYXMgcHJvZEVycm9yTWFwLCBaIGFzIHJlYXV0aGVudGljYXRlV2l0aENyZWRlbnRpYWwsIHIgYXMgcmVhdXRoZW50aWNhdGVXaXRoUGhvbmVOdW1iZXIsIGUgYXMgcmVhdXRoZW50aWNhdGVXaXRoUG9wdXAsIGggYXMgcmVhdXRoZW50aWNhdGVXaXRoUmVkaXJlY3QsIGFsIGFzIHJlbG9hZCwgYWEgYXMgc2VuZEVtYWlsVmVyaWZpY2F0aW9uLCAkIGFzIHNlbmRQYXNzd29yZFJlc2V0RW1haWwsIGE2IGFzIHNlbmRTaWduSW5MaW5rVG9FbWFpbCwgcCBhcyBzZXRQZXJzaXN0ZW5jZSwgVyBhcyBzaWduSW5Bbm9ueW1vdXNseSwgWCBhcyBzaWduSW5XaXRoQ3JlZGVudGlhbCwgXyBhcyBzaWduSW5XaXRoQ3VzdG9tVG9rZW4sIGE1IGFzIHNpZ25JbldpdGhFbWFpbEFuZFBhc3N3b3JkLCBhOCBhcyBzaWduSW5XaXRoRW1haWxMaW5rLCBzIGFzIHNpZ25JbldpdGhQaG9uZU51bWJlciwgYyBhcyBzaWduSW5XaXRoUG9wdXAsIGYgYXMgc2lnbkluV2l0aFJlZGlyZWN0LCB4IGFzIHNpZ25PdXQsIGFqIGFzIHVubGluaywgdyBhcyB1cGRhdGVDdXJyZW50VXNlciwgYWYgYXMgdXBkYXRlRW1haWwsIGFnIGFzIHVwZGF0ZVBhc3N3b3JkLCB1IGFzIHVwZGF0ZVBob25lTnVtYmVyLCBhZSBhcyB1cGRhdGVQcm9maWxlLCB2IGFzIHVzZURldmljZUxhbmd1YWdlLCBhYiBhcyB2ZXJpZnlCZWZvcmVVcGRhdGVFbWFpbCwgYTMgYXMgdmVyaWZ5UGFzc3dvcmRSZXNldENvZGUgfSBmcm9tICcuL2luZGV4LTgzOWRlNTEwLmpzJztcbmltcG9ydCB7IHF1ZXJ5c3RyaW5nRGVjb2RlIH0gZnJvbSAnQGZpcmViYXNlL3V0aWwnO1xuaW1wb3J0ICdAZmlyZWJhc2UvYXBwJztcbmltcG9ydCAndHNsaWInO1xuaW1wb3J0ICdAZmlyZWJhc2UvbG9nZ2VyJztcbmltcG9ydCAnQGZpcmViYXNlL2NvbXBvbmVudCc7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIF9jb3Jkb3ZhV2luZG93KCkge1xyXG4gICAgcmV0dXJuIHdpbmRvdztcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogSG93IGxvbmcgdG8gd2FpdCBhZnRlciB0aGUgYXBwIGNvbWVzIGJhY2sgaW50byBmb2N1cyBiZWZvcmUgY29uY2x1ZGluZyB0aGF0XHJcbiAqIHRoZSB1c2VyIGNsb3NlZCB0aGUgc2lnbiBpbiB0YWIuXHJcbiAqL1xyXG5jb25zdCBSRURJUkVDVF9USU1FT1VUX01TID0gMjAwMDtcclxuLyoqXHJcbiAqIEdlbmVyYXRlcyB0aGUgVVJMIGZvciB0aGUgT0F1dGggaGFuZGxlci5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIF9nZW5lcmF0ZUhhbmRsZXJVcmwoYXV0aCwgZXZlbnQsIHByb3ZpZGVyKSB7XHJcbiAgICB2YXIgX2E7XHJcbiAgICAvLyBHZXQgdGhlIGNvcmRvdmEgcGx1Z2luc1xyXG4gICAgY29uc3QgeyBCdWlsZEluZm8gfSA9IF9jb3Jkb3ZhV2luZG93KCk7XHJcbiAgICBkZWJ1Z0Fzc2VydChldmVudC5zZXNzaW9uSWQsICdBdXRoRXZlbnQgZGlkIG5vdCBjb250YWluIGEgc2Vzc2lvbiBJRCcpO1xyXG4gICAgY29uc3Qgc2Vzc2lvbkRpZ2VzdCA9IGF3YWl0IGNvbXB1dGVTaGEyNTYoZXZlbnQuc2Vzc2lvbklkKTtcclxuICAgIGNvbnN0IGFkZGl0aW9uYWxQYXJhbXMgPSB7fTtcclxuICAgIGlmIChfaXNJT1MoKSkge1xyXG4gICAgICAgIC8vIGlPUyBhcHAgaWRlbnRpZmllclxyXG4gICAgICAgIGFkZGl0aW9uYWxQYXJhbXNbJ2liaSddID0gQnVpbGRJbmZvLnBhY2thZ2VOYW1lO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoX2lzQW5kcm9pZCgpKSB7XHJcbiAgICAgICAgLy8gQW5kcm9pZCBhcHAgaWRlbnRpZmllclxyXG4gICAgICAgIGFkZGl0aW9uYWxQYXJhbXNbJ2FwbiddID0gQnVpbGRJbmZvLnBhY2thZ2VOYW1lO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgX2ZhaWwoYXV0aCwgXCJvcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCIgLyogT1BFUkFUSU9OX05PVF9TVVBQT1JURUQgKi8pO1xyXG4gICAgfVxyXG4gICAgLy8gQWRkIHRoZSBkaXNwbGF5IG5hbWUgaWYgYXZhaWxhYmxlXHJcbiAgICBpZiAoQnVpbGRJbmZvLmRpc3BsYXlOYW1lKSB7XHJcbiAgICAgICAgYWRkaXRpb25hbFBhcmFtc1snYXBwRGlzcGxheU5hbWUnXSA9IEJ1aWxkSW5mby5kaXNwbGF5TmFtZTtcclxuICAgIH1cclxuICAgIC8vIEF0dGFjaGVkIHRoZSBoYXNoZWQgc2Vzc2lvbiBJRFxyXG4gICAgYWRkaXRpb25hbFBhcmFtc1snc2Vzc2lvbklkJ10gPSBzZXNzaW9uRGlnZXN0O1xyXG4gICAgcmV0dXJuIF9nZXRSZWRpcmVjdFVybChhdXRoLCBwcm92aWRlciwgZXZlbnQudHlwZSwgdW5kZWZpbmVkLCAoX2EgPSBldmVudC5ldmVudElkKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB1bmRlZmluZWQsIGFkZGl0aW9uYWxQYXJhbXMpO1xyXG59XHJcbi8qKlxyXG4gKiBWYWxpZGF0ZXMgdGhhdCB0aGlzIGFwcCBpcyB2YWxpZCBmb3IgdGhpcyBwcm9qZWN0IGNvbmZpZ3VyYXRpb25cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIF92YWxpZGF0ZU9yaWdpbihhdXRoKSB7XHJcbiAgICBjb25zdCB7IEJ1aWxkSW5mbyB9ID0gX2NvcmRvdmFXaW5kb3coKTtcclxuICAgIGNvbnN0IHJlcXVlc3QgPSB7fTtcclxuICAgIGlmIChfaXNJT1MoKSkge1xyXG4gICAgICAgIHJlcXVlc3QuaW9zQnVuZGxlSWQgPSBCdWlsZEluZm8ucGFja2FnZU5hbWU7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChfaXNBbmRyb2lkKCkpIHtcclxuICAgICAgICByZXF1ZXN0LmFuZHJvaWRQYWNrYWdlTmFtZSA9IEJ1aWxkSW5mby5wYWNrYWdlTmFtZTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIF9mYWlsKGF1dGgsIFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiIC8qIE9QRVJBVElPTl9OT1RfU1VQUE9SVEVEICovKTtcclxuICAgIH1cclxuICAgIC8vIFdpbGwgZmFpbCBhdXRvbWF0aWNhbGx5IGlmIHBhY2thZ2UgbmFtZSBpcyBub3QgYXV0aG9yaXplZFxyXG4gICAgYXdhaXQgX2dldFByb2plY3RDb25maWcoYXV0aCwgcmVxdWVzdCk7XHJcbn1cclxuZnVuY3Rpb24gX3BlcmZvcm1SZWRpcmVjdChoYW5kbGVyVXJsKSB7XHJcbiAgICAvLyBHZXQgdGhlIGNvcmRvdmEgcGx1Z2luc1xyXG4gICAgY29uc3QgeyBjb3Jkb3ZhIH0gPSBfY29yZG92YVdpbmRvdygpO1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xyXG4gICAgICAgIGNvcmRvdmEucGx1Z2lucy5icm93c2VydGFiLmlzQXZhaWxhYmxlKGJyb3dzZXJUYWJJc0F2YWlsYWJsZSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBpYWJSZWYgPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAoYnJvd3NlclRhYklzQXZhaWxhYmxlKSB7XHJcbiAgICAgICAgICAgICAgICBjb3Jkb3ZhLnBsdWdpbnMuYnJvd3NlcnRhYi5vcGVuVXJsKGhhbmRsZXJVcmwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gVE9ETzogUmV0dXJuIHRoZSBpbmFwcGJyb3dzZXIgcmVmIHRoYXQncyByZXR1cm5lZCBmcm9tIHRoZSBvcGVuIGNhbGxcclxuICAgICAgICAgICAgICAgIGlhYlJlZiA9IGNvcmRvdmEuSW5BcHBCcm93c2VyLm9wZW4oaGFuZGxlclVybCwgX2lzSU9TN09yOCgpID8gJ19ibGFuaycgOiAnX3N5c3RlbScsICdsb2NhdGlvbj15ZXMnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXNvbHZlKGlhYlJlZik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9KTtcclxufVxyXG4vKipcclxuICogVGhpcyBmdW5jdGlvbiB3YWl0cyBmb3IgYXBwIGFjdGl2aXR5IHRvIGJlIHNlZW4gYmVmb3JlIHJlc29sdmluZy4gSXQgZG9lc1xyXG4gKiB0aGlzIGJ5IGF0dGFjaGluZyBsaXN0ZW5lcnMgdG8gdmFyaW91cyBkb20gZXZlbnRzLiBPbmNlIHRoZSBhcHAgaXMgZGV0ZXJtaW5lZFxyXG4gKiB0byBiZSB2aXNpYmxlLCB0aGlzIHByb21pc2UgcmVzb2x2ZXMuIEFGVEVSIHRoYXQgcmVzb2x1dGlvbiwgdGhlIGxpc3RlbmVyc1xyXG4gKiBhcmUgZGV0YWNoZWQgYW5kIGFueSBicm93c2VyIHRhYnMgbGVmdCBvcGVuIHdpbGwgYmUgY2xvc2VkLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gX3dhaXRGb3JBcHBSZXN1bWUoYXV0aCwgZXZlbnRMaXN0ZW5lciwgaWFiUmVmKSB7XHJcbiAgICAvLyBHZXQgdGhlIGNvcmRvdmEgcGx1Z2luc1xyXG4gICAgY29uc3QgeyBjb3Jkb3ZhIH0gPSBfY29yZG92YVdpbmRvdygpO1xyXG4gICAgbGV0IGNsZWFudXAgPSAoKSA9PiB7IH07XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgbGV0IG9uQ2xvc2VUaW1lciA9IG51bGw7XHJcbiAgICAgICAgICAgIC8vIERFRklORSBBTEwgVEhFIENBTExCQUNLUyA9PT09PVxyXG4gICAgICAgICAgICBmdW5jdGlvbiBhdXRoRXZlbnRTZWVuKCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIF9hO1xyXG4gICAgICAgICAgICAgICAgLy8gQXV0aCBldmVudCB3YXMgZGV0ZWN0ZWQuIFJlc29sdmUgdGhpcyBwcm9taXNlIGFuZCBjbG9zZSB0aGUgZXh0cmFcclxuICAgICAgICAgICAgICAgIC8vIHdpbmRvdyBpZiBpdCdzIHN0aWxsIG9wZW4uXHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjbG9zZUJyb3dzZXJUYWIgPSAoX2EgPSBjb3Jkb3ZhLnBsdWdpbnMuYnJvd3NlcnRhYikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsb3NlO1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjbG9zZUJyb3dzZXJUYWIgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgICAgICAgICBjbG9zZUJyb3dzZXJUYWIoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIENsb3NlIGluYXBwYnJvd3NlciBlbWViZWRkZWQgd2VidmlldyBpbiBpT1M3IGFuZCA4IGNhc2UgaWYgc3RpbGxcclxuICAgICAgICAgICAgICAgIC8vIG9wZW4uXHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIChpYWJSZWYgPT09IG51bGwgfHwgaWFiUmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpYWJSZWYuY2xvc2UpID09PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWFiUmVmLmNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZnVuY3Rpb24gcmVzdW1lZCgpIHtcclxuICAgICAgICAgICAgICAgIGlmIChvbkNsb3NlVGltZXIpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBUaGlzIGNvZGUgYWxyZWFkeSByYW47IGRvIG5vdCByZXJ1bi5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBvbkNsb3NlVGltZXIgPSB3aW5kb3cuc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gV2FpdCB0d28gc2VlY29uZHMgYWZ0ZXIgcmVzdW1lIHRoZW4gcmVqZWN0LlxyXG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChfY3JlYXRlRXJyb3IoYXV0aCwgXCJyZWRpcmVjdC1jYW5jZWxsZWQtYnktdXNlclwiIC8qIFJFRElSRUNUX0NBTkNFTExFRF9CWV9VU0VSICovKSk7XHJcbiAgICAgICAgICAgICAgICB9LCBSRURJUkVDVF9USU1FT1VUX01TKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmdW5jdGlvbiB2aXNpYmlsaXR5Q2hhbmdlZCgpIHtcclxuICAgICAgICAgICAgICAgIGlmICgoZG9jdW1lbnQgPT09IG51bGwgfHwgZG9jdW1lbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSkgPT09ICd2aXNpYmxlJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3VtZWQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBBVFRBQ0ggQUxMIFRIRSBMSVNURU5FUlMgPT09PT1cclxuICAgICAgICAgICAgLy8gTGlzdGVuIGZvciB0aGUgYXV0aCBldmVudFxyXG4gICAgICAgICAgICBldmVudExpc3RlbmVyLmFkZFBhc3NpdmVMaXN0ZW5lcihhdXRoRXZlbnRTZWVuKTtcclxuICAgICAgICAgICAgLy8gTGlzdGVuIGZvciByZXN1bWUgYW5kIHZpc2liaWxpdHkgZXZlbnRzXHJcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc3VtZScsIHJlc3VtZWQsIGZhbHNlKTtcclxuICAgICAgICAgICAgaWYgKF9pc0FuZHJvaWQoKSkge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIHZpc2liaWxpdHlDaGFuZ2VkLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gU0VUVVAgVEhFIENMRUFOVVAgRlVOQ1RJT04gPT09PT1cclxuICAgICAgICAgICAgY2xlYW51cCA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIGV2ZW50TGlzdGVuZXIucmVtb3ZlUGFzc2l2ZUxpc3RlbmVyKGF1dGhFdmVudFNlZW4pO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzdW1lJywgcmVzdW1lZCwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIHZpc2liaWxpdHlDaGFuZ2VkLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAob25DbG9zZVRpbWVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChvbkNsb3NlVGltZXIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZmluYWxseSB7XHJcbiAgICAgICAgY2xlYW51cCgpO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBDaGVja3MgdGhlIGNvbmZpZ3VyYXRpb24gb2YgdGhlIENvcmRvdmEgZW52aXJvbm1lbnQuIFRoaXMgaGFzIG5vIHNpZGUgZWZmZWN0XHJcbiAqIGlmIHRoZSBjb25maWd1cmF0aW9uIGlzIGNvcnJlY3Q7IG90aGVyd2lzZSBpdCB0aHJvd3MgYW4gZXJyb3Igd2l0aCB0aGVcclxuICogbWlzc2luZyBwbHVnaW4uXHJcbiAqL1xyXG5mdW5jdGlvbiBfY2hlY2tDb3Jkb3ZhQ29uZmlndXJhdGlvbihhdXRoKSB7XHJcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZiwgX2csIF9oLCBfaiwgX2s7XHJcbiAgICBjb25zdCB3aW4gPSBfY29yZG92YVdpbmRvdygpO1xyXG4gICAgLy8gQ2hlY2sgYWxsIGRlcGVuZGVuY2llcyBpbnN0YWxsZWQuXHJcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbm9yZG5ldC9jb3Jkb3ZhLXVuaXZlcnNhbC1saW5rcy1wbHVnaW5cclxuICAgIC8vIE5vdGUgdGhhdCBjb3Jkb3ZhLXVuaXZlcnNhbC1saW5rcy1wbHVnaW4gaGFzIGJlZW4gYWJhbmRvbmVkLlxyXG4gICAgLy8gQSBmb3JrIHdpdGggbGF0ZXN0IGZpeGVzIGlzIGF2YWlsYWJsZSBhdDpcclxuICAgIC8vIGh0dHBzOi8vd3d3Lm5wbWpzLmNvbS9wYWNrYWdlL2NvcmRvdmEtdW5pdmVyc2FsLWxpbmtzLXBsdWdpbi1maXhcclxuICAgIF9hc3NlcnQodHlwZW9mICgoX2EgPSB3aW4gPT09IG51bGwgfHwgd2luID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3aW4udW5pdmVyc2FsTGlua3MpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zdWJzY3JpYmUpID09PSAnZnVuY3Rpb24nLCBhdXRoLCBcImludmFsaWQtY29yZG92YS1jb25maWd1cmF0aW9uXCIgLyogSU5WQUxJRF9DT1JET1ZBX0NPTkZJR1VSQVRJT04gKi8sIHtcclxuICAgICAgICBtaXNzaW5nUGx1Z2luOiAnY29yZG92YS11bml2ZXJzYWwtbGlua3MtcGx1Z2luLWZpeCdcclxuICAgIH0pO1xyXG4gICAgLy8gaHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvY29yZG92YS1wbHVnaW4tYnVpbGRpbmZvXHJcbiAgICBfYXNzZXJ0KHR5cGVvZiAoKF9iID0gd2luID09PSBudWxsIHx8IHdpbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2luLkJ1aWxkSW5mbykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnBhY2thZ2VOYW1lKSAhPT0gJ3VuZGVmaW5lZCcsIGF1dGgsIFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIiAvKiBJTlZBTElEX0NPUkRPVkFfQ09ORklHVVJBVElPTiAqLywge1xyXG4gICAgICAgIG1pc3NpbmdQbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1idWlsZEluZm8nXHJcbiAgICB9KTtcclxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvY29yZG92YS1wbHVnaW4tYnJvd3NlcnRhYlxyXG4gICAgX2Fzc2VydCh0eXBlb2YgKChfZSA9IChfZCA9IChfYyA9IHdpbiA9PT0gbnVsbCB8fCB3aW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdpbi5jb3Jkb3ZhKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MucGx1Z2lucykgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmJyb3dzZXJ0YWIpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5vcGVuVXJsKSA9PT0gJ2Z1bmN0aW9uJywgYXV0aCwgXCJpbnZhbGlkLWNvcmRvdmEtY29uZmlndXJhdGlvblwiIC8qIElOVkFMSURfQ09SRE9WQV9DT05GSUdVUkFUSU9OICovLCB7XHJcbiAgICAgICAgbWlzc2luZ1BsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWJyb3dzZXJ0YWInXHJcbiAgICB9KTtcclxuICAgIF9hc3NlcnQodHlwZW9mICgoX2ggPSAoX2cgPSAoX2YgPSB3aW4gPT09IG51bGwgfHwgd2luID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3aW4uY29yZG92YSkgPT09IG51bGwgfHwgX2YgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9mLnBsdWdpbnMpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy5icm93c2VydGFiKSA9PT0gbnVsbCB8fCBfaCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2guaXNBdmFpbGFibGUpID09PSAnZnVuY3Rpb24nLCBhdXRoLCBcImludmFsaWQtY29yZG92YS1jb25maWd1cmF0aW9uXCIgLyogSU5WQUxJRF9DT1JET1ZBX0NPTkZJR1VSQVRJT04gKi8sIHtcclxuICAgICAgICBtaXNzaW5nUGx1Z2luOiAnY29yZG92YS1wbHVnaW4tYnJvd3NlcnRhYidcclxuICAgIH0pO1xyXG4gICAgLy8gaHR0cHM6Ly9jb3Jkb3ZhLmFwYWNoZS5vcmcvZG9jcy9lbi9sYXRlc3QvcmVmZXJlbmNlL2NvcmRvdmEtcGx1Z2luLWluYXBwYnJvd3Nlci9cclxuICAgIF9hc3NlcnQodHlwZW9mICgoX2sgPSAoX2ogPSB3aW4gPT09IG51bGwgfHwgd2luID09PSB2b2lkIDAgPyB2b2lkIDAgOiB3aW4uY29yZG92YSkgPT09IG51bGwgfHwgX2ogPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9qLkluQXBwQnJvd3NlcikgPT09IG51bGwgfHwgX2sgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9rLm9wZW4pID09PSAnZnVuY3Rpb24nLCBhdXRoLCBcImludmFsaWQtY29yZG92YS1jb25maWd1cmF0aW9uXCIgLyogSU5WQUxJRF9DT1JET1ZBX0NPTkZJR1VSQVRJT04gKi8sIHtcclxuICAgICAgICBtaXNzaW5nUGx1Z2luOiAnY29yZG92YS1wbHVnaW4taW5hcHBicm93c2VyJ1xyXG4gICAgfSk7XHJcbn1cclxuLyoqXHJcbiAqIENvbXB1dGVzIHRoZSBTSEEtMjU2IG9mIGEgc2Vzc2lvbiBJRC4gVGhlIFN1YnRsZUNyeXB0byBpbnRlcmZhY2UgaXMgb25seVxyXG4gKiBhdmFpbGFibGUgaW4gXCJzZWN1cmVcIiBjb250ZXh0cywgd2hpY2ggY292ZXJzIENvcmRvdmEgKHdoaWNoIGlzIHNlcnZlZCBvbiBhIGZpbGVcclxuICogcHJvdG9jb2wpLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY29tcHV0ZVNoYTI1NihzZXNzaW9uSWQpIHtcclxuICAgIGNvbnN0IGJ5dGVzID0gc3RyaW5nVG9BcnJheUJ1ZmZlcihzZXNzaW9uSWQpO1xyXG4gICAgLy8gVE9ETzogRm9yIElFMTEgY3J5cHRvIGhhcyBhIGRpZmZlcmVudCBuYW1lIGFuZCB0aGlzIG9wZXJhdGlvbiBjb21lcyBiYWNrXHJcbiAgICAvLyAgICAgICBhcyBhbiBvYmplY3QsIG5vdCBhIHByb21pc2UuIFRoaXMgaXMgdGhlIG9sZCBwcm9wb3NlZCBzdGFuZGFyZCB0aGF0XHJcbiAgICAvLyAgICAgICBpcyB1c2VkIGJ5IElFMTE6XHJcbiAgICAvLyBodHRwczovL3d3dy53My5vcmcvVFIvMjAxMy9XRC1XZWJDcnlwdG9BUEktMjAxMzAxMDgvI2NyeXB0b29wZXJhdGlvbi1pbnRlcmZhY2VcclxuICAgIGNvbnN0IGJ1ZiA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KCdTSEEtMjU2JywgYnl0ZXMpO1xyXG4gICAgY29uc3QgYXJyID0gQXJyYXkuZnJvbShuZXcgVWludDhBcnJheShidWYpKTtcclxuICAgIHJldHVybiBhcnIubWFwKG51bSA9PiBudW0udG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJykpLmpvaW4oJycpO1xyXG59XHJcbmZ1bmN0aW9uIHN0cmluZ1RvQXJyYXlCdWZmZXIoc3RyKSB7XHJcbiAgICAvLyBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgbWVhbnQgdG8gZGVhbCB3aXRoIGFuIEFTQ0lJIGNoYXJzZXQgYW5kIG1ha2VzXHJcbiAgICAvLyBjZXJ0YWluIHNpbXBsaWZ5aW5nIGFzc3VtcHRpb25zLlxyXG4gICAgZGVidWdBc3NlcnQoL1swLTlhLXpBLVpdKy8udGVzdChzdHIpLCAnQ2FuIG9ubHkgY29udmVydCBhbHBoYS1udW1lcmljIHN0cmluZ3MnKTtcclxuICAgIGlmICh0eXBlb2YgVGV4dEVuY29kZXIgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShzdHIpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYnVmZiA9IG5ldyBBcnJheUJ1ZmZlcihzdHIubGVuZ3RoKTtcclxuICAgIGNvbnN0IHZpZXcgPSBuZXcgVWludDhBcnJheShidWZmKTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmlld1tpXSA9IHN0ci5jaGFyQ29kZUF0KGkpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHZpZXc7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgU0VTU0lPTl9JRF9MRU5HVEggPSAyMDtcclxuLyoqIEN1c3RvbSBBdXRoRXZlbnRNYW5hZ2VyIHRoYXQgYWRkcyBwYXNzaXZlIGxpc3RlbmVycyB0byBldmVudHMgKi9cclxuY2xhc3MgQ29yZG92YUF1dGhFdmVudE1hbmFnZXIgZXh0ZW5kcyBBdXRoRXZlbnRNYW5hZ2VyIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgICAgdGhpcy5wYXNzaXZlTGlzdGVuZXJzID0gbmV3IFNldCgpO1xyXG4gICAgICAgIHRoaXMuaW5pdFByb21pc2UgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5yZXNvbHZlSW5pYWxpemVkID0gcmVzb2x2ZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGFkZFBhc3NpdmVMaXN0ZW5lcihjYikge1xyXG4gICAgICAgIHRoaXMucGFzc2l2ZUxpc3RlbmVycy5hZGQoY2IpO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlUGFzc2l2ZUxpc3RlbmVyKGNiKSB7XHJcbiAgICAgICAgdGhpcy5wYXNzaXZlTGlzdGVuZXJzLmRlbGV0ZShjYik7XHJcbiAgICB9XHJcbiAgICAvLyBJbiBhIENvcmRvdmEgZW52aXJvbm1lbnQsIHRoaXMgbWFuYWdlciBjYW4gbGl2ZSB0aHJvdWdoIG11bHRpcGxlIHJlZGlyZWN0XHJcbiAgICAvLyBvcGVyYXRpb25zXHJcbiAgICByZXNldFJlZGlyZWN0KCkge1xyXG4gICAgICAgIHRoaXMucXVldWVkUmVkaXJlY3RFdmVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5oYXNIYW5kbGVkUG90ZW50aWFsUmVkaXJlY3QgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIC8qKiBPdmVycmlkZSB0aGUgb25FdmVudCBtZXRob2QgKi9cclxuICAgIG9uRXZlbnQoZXZlbnQpIHtcclxuICAgICAgICB0aGlzLnJlc29sdmVJbmlhbGl6ZWQoKTtcclxuICAgICAgICB0aGlzLnBhc3NpdmVMaXN0ZW5lcnMuZm9yRWFjaChjYiA9PiBjYihldmVudCkpO1xyXG4gICAgICAgIHJldHVybiBzdXBlci5vbkV2ZW50KGV2ZW50KTtcclxuICAgIH1cclxuICAgIGFzeW5jIGluaXRpYWxpemVkKCkge1xyXG4gICAgICAgIGF3YWl0IHRoaXMuaW5pdFByb21pc2U7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIEdlbmVyYXRlcyBhIChwYXJ0aWFsKSB7QGxpbmsgQXV0aEV2ZW50fS5cclxuICovXHJcbmZ1bmN0aW9uIF9nZW5lcmF0ZU5ld0V2ZW50KGF1dGgsIHR5cGUsIGV2ZW50SWQgPSBudWxsKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHR5cGUsXHJcbiAgICAgICAgZXZlbnRJZCxcclxuICAgICAgICB1cmxSZXNwb25zZTogbnVsbCxcclxuICAgICAgICBzZXNzaW9uSWQ6IGdlbmVyYXRlU2Vzc2lvbklkKCksXHJcbiAgICAgICAgcG9zdEJvZHk6IG51bGwsXHJcbiAgICAgICAgdGVuYW50SWQ6IGF1dGgudGVuYW50SWQsXHJcbiAgICAgICAgZXJyb3I6IF9jcmVhdGVFcnJvcihhdXRoLCBcIm5vLWF1dGgtZXZlbnRcIiAvKiBOT19BVVRIX0VWRU5UICovKVxyXG4gICAgfTtcclxufVxyXG5mdW5jdGlvbiBfc2F2ZVBhcnRpYWxFdmVudChhdXRoLCBldmVudCkge1xyXG4gICAgcmV0dXJuIHN0b3JhZ2UoKS5fc2V0KHBlcnNpc3RlbmNlS2V5KGF1dGgpLCBldmVudCk7XHJcbn1cclxuYXN5bmMgZnVuY3Rpb24gX2dldEFuZFJlbW92ZUV2ZW50KGF1dGgpIHtcclxuICAgIGNvbnN0IGV2ZW50ID0gKGF3YWl0IHN0b3JhZ2UoKS5fZ2V0KHBlcnNpc3RlbmNlS2V5KGF1dGgpKSk7XHJcbiAgICBpZiAoZXZlbnQpIHtcclxuICAgICAgICBhd2FpdCBzdG9yYWdlKCkuX3JlbW92ZShwZXJzaXN0ZW5jZUtleShhdXRoKSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZXZlbnQ7XHJcbn1cclxuZnVuY3Rpb24gX2V2ZW50RnJvbVBhcnRpYWxBbmRVcmwocGFydGlhbEV2ZW50LCB1cmwpIHtcclxuICAgIHZhciBfYSwgX2I7XHJcbiAgICAvLyBQYXJzZSB0aGUgZGVlcCBsaW5rIHdpdGhpbiB0aGUgZHluYW1pYyBsaW5rIFVSTC5cclxuICAgIGNvbnN0IGNhbGxiYWNrVXJsID0gX2dldERlZXBMaW5rRnJvbUNhbGxiYWNrKHVybCk7XHJcbiAgICAvLyBDb25maXJtIGl0IGlzIGFjdHVhbGx5IGEgY2FsbGJhY2sgVVJMLlxyXG4gICAgLy8gQ3VycmVudGx5IHRoZSB1bml2ZXJzYWwgbGluayB3aWxsIGJlIG9mIHRoaXMgZm9ybWF0OlxyXG4gICAgLy8gaHR0cHM6Ly88QVVUSF9ET01BSU4+L19fL2F1dGgvY2FsbGJhY2s8T0FVVEhfUkVTUE9OU0U+XHJcbiAgICAvLyBUaGlzIGlzIGEgZmFrZSBVUkwgYnV0IGlzIG5vdCBpbnRlbmRlZCB0byB0YWtlIHRoZSB1c2VyIGFueXdoZXJlXHJcbiAgICAvLyBhbmQganVzdCByZWRpcmVjdCB0byB0aGUgYXBwLlxyXG4gICAgaWYgKGNhbGxiYWNrVXJsLmluY2x1ZGVzKCcvX18vYXV0aC9jYWxsYmFjaycpKSB7XHJcbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlcmUgaXMgYW4gZXJyb3IgaW4gdGhlIFVSTC5cclxuICAgICAgICAvLyBUaGlzIG1lY2hhbmlzbSBpcyBhbHNvIHVzZWQgdG8gcGFzcyBlcnJvcnMgYmFjayB0byB0aGUgYXBwOlxyXG4gICAgICAgIC8vIGh0dHBzOi8vPEFVVEhfRE9NQUlOPi9fXy9hdXRoL2NhbGxiYWNrP2ZpcmViYXNlRXJyb3I9PFNUUklOR0lGSUVEX0VSUk9SPlxyXG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHNlYXJjaFBhcmFtc09yRW1wdHkoY2FsbGJhY2tVcmwpO1xyXG4gICAgICAgIC8vIEdldCB0aGUgZXJyb3Igb2JqZWN0IGNvcnJlc3BvbmRpbmcgdG8gdGhlIHN0cmluZ2lmaWVkIGVycm9yIGlmIGZvdW5kLlxyXG4gICAgICAgIGNvbnN0IGVycm9yT2JqZWN0ID0gcGFyYW1zWydmaXJlYmFzZUVycm9yJ11cclxuICAgICAgICAgICAgPyBwYXJzZUpzb25Pck51bGwoZGVjb2RlVVJJQ29tcG9uZW50KHBhcmFtc1snZmlyZWJhc2VFcnJvciddKSlcclxuICAgICAgICAgICAgOiBudWxsO1xyXG4gICAgICAgIGNvbnN0IGNvZGUgPSAoX2IgPSAoX2EgPSBlcnJvck9iamVjdCA9PT0gbnVsbCB8fCBlcnJvck9iamVjdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXJyb3JPYmplY3RbJ2NvZGUnXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNwbGl0KCdhdXRoLycpKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2JbMV07XHJcbiAgICAgICAgY29uc3QgZXJyb3IgPSBjb2RlID8gX2NyZWF0ZUVycm9yKGNvZGUpIDogbnVsbDtcclxuICAgICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IHBhcnRpYWxFdmVudC50eXBlLFxyXG4gICAgICAgICAgICAgICAgZXZlbnRJZDogcGFydGlhbEV2ZW50LmV2ZW50SWQsXHJcbiAgICAgICAgICAgICAgICB0ZW5hbnRJZDogcGFydGlhbEV2ZW50LnRlbmFudElkLFxyXG4gICAgICAgICAgICAgICAgZXJyb3IsXHJcbiAgICAgICAgICAgICAgICB1cmxSZXNwb25zZTogbnVsbCxcclxuICAgICAgICAgICAgICAgIHNlc3Npb25JZDogbnVsbCxcclxuICAgICAgICAgICAgICAgIHBvc3RCb2R5OiBudWxsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgdHlwZTogcGFydGlhbEV2ZW50LnR5cGUsXHJcbiAgICAgICAgICAgICAgICBldmVudElkOiBwYXJ0aWFsRXZlbnQuZXZlbnRJZCxcclxuICAgICAgICAgICAgICAgIHRlbmFudElkOiBwYXJ0aWFsRXZlbnQudGVuYW50SWQsXHJcbiAgICAgICAgICAgICAgICBzZXNzaW9uSWQ6IHBhcnRpYWxFdmVudC5zZXNzaW9uSWQsXHJcbiAgICAgICAgICAgICAgICB1cmxSZXNwb25zZTogY2FsbGJhY2tVcmwsXHJcbiAgICAgICAgICAgICAgICBwb3N0Qm9keTogbnVsbFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG59XHJcbmZ1bmN0aW9uIGdlbmVyYXRlU2Vzc2lvbklkKCkge1xyXG4gICAgY29uc3QgY2hhcnMgPSBbXTtcclxuICAgIGNvbnN0IGFsbG93ZWRDaGFycyA9ICcxMjM0NTY3ODkwYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXpBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWic7XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IFNFU1NJT05fSURfTEVOR1RIOyBpKyspIHtcclxuICAgICAgICBjb25zdCBpZHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhbGxvd2VkQ2hhcnMubGVuZ3RoKTtcclxuICAgICAgICBjaGFycy5wdXNoKGFsbG93ZWRDaGFycy5jaGFyQXQoaWR4KSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gY2hhcnMuam9pbignJyk7XHJcbn1cclxuZnVuY3Rpb24gc3RvcmFnZSgpIHtcclxuICAgIHJldHVybiBfZ2V0SW5zdGFuY2UoYnJvd3NlckxvY2FsUGVyc2lzdGVuY2UpO1xyXG59XHJcbmZ1bmN0aW9uIHBlcnNpc3RlbmNlS2V5KGF1dGgpIHtcclxuICAgIHJldHVybiBfcGVyc2lzdGVuY2VLZXlOYW1lKFwiYXV0aEV2ZW50XCIgLyogQVVUSF9FVkVOVCAqLywgYXV0aC5jb25maWcuYXBpS2V5LCBhdXRoLm5hbWUpO1xyXG59XHJcbmZ1bmN0aW9uIHBhcnNlSnNvbk9yTnVsbChqc29uKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGpzb24pO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufVxyXG4vLyBFeHBvcnRlZCBmb3IgdGVzdGluZ1xyXG5mdW5jdGlvbiBfZ2V0RGVlcExpbmtGcm9tQ2FsbGJhY2sodXJsKSB7XHJcbiAgICBjb25zdCBwYXJhbXMgPSBzZWFyY2hQYXJhbXNPckVtcHR5KHVybCk7XHJcbiAgICBjb25zdCBsaW5rID0gcGFyYW1zWydsaW5rJ10gPyBkZWNvZGVVUklDb21wb25lbnQocGFyYW1zWydsaW5rJ10pIDogdW5kZWZpbmVkO1xyXG4gICAgLy8gRG91YmxlIGxpbmsgY2FzZSAoYXV0b21hdGljIHJlZGlyZWN0KVxyXG4gICAgY29uc3QgZG91YmxlRGVlcExpbmsgPSBzZWFyY2hQYXJhbXNPckVtcHR5KGxpbmspWydsaW5rJ107XHJcbiAgICAvLyBpT1MgY3VzdG9tIHNjaGVtZSBsaW5rcy5cclxuICAgIGNvbnN0IGlPU0RlZXBMaW5rID0gcGFyYW1zWydkZWVwX2xpbmtfaWQnXVxyXG4gICAgICAgID8gZGVjb2RlVVJJQ29tcG9uZW50KHBhcmFtc1snZGVlcF9saW5rX2lkJ10pXHJcbiAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICBjb25zdCBpT1NEb3VibGVEZWVwTGluayA9IHNlYXJjaFBhcmFtc09yRW1wdHkoaU9TRGVlcExpbmspWydsaW5rJ107XHJcbiAgICByZXR1cm4gaU9TRG91YmxlRGVlcExpbmsgfHwgaU9TRGVlcExpbmsgfHwgZG91YmxlRGVlcExpbmsgfHwgbGluayB8fCB1cmw7XHJcbn1cclxuLyoqXHJcbiAqIE9wdGltaXN0aWNhbGx5IHRyaWVzIHRvIGdldCBzZWFyY2ggcGFyYW1zIGZyb20gYSBzdHJpbmcsIG9yIGVsc2UgcmV0dXJucyBhblxyXG4gKiBlbXB0eSBzZWFyY2ggcGFyYW1zIG9iamVjdC5cclxuICovXHJcbmZ1bmN0aW9uIHNlYXJjaFBhcmFtc09yRW1wdHkodXJsKSB7XHJcbiAgICBpZiAoISh1cmwgPT09IG51bGwgfHwgdXJsID09PSB2b2lkIDAgPyB2b2lkIDAgOiB1cmwuaW5jbHVkZXMoJz8nKSkpIHtcclxuICAgICAgICByZXR1cm4ge307XHJcbiAgICB9XHJcbiAgICBjb25zdCBbXywgLi4ucmVzdF0gPSB1cmwuc3BsaXQoJz8nKTtcclxuICAgIHJldHVybiBxdWVyeXN0cmluZ0RlY29kZShyZXN0LmpvaW4oJz8nKSk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEhvdyBsb25nIHRvIHdhaXQgZm9yIHRoZSBpbml0aWFsIGF1dGggZXZlbnQgYmVmb3JlIGNvbmNsdWRpbmcgbm9cclxuICogcmVkaXJlY3QgcGVuZGluZ1xyXG4gKi9cclxuY29uc3QgSU5JVElBTF9FVkVOVF9USU1FT1VUX01TID0gNTAwO1xyXG5jbGFzcyBDb3Jkb3ZhUG9wdXBSZWRpcmVjdFJlc29sdmVyIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuX3JlZGlyZWN0UGVyc2lzdGVuY2UgPSBicm93c2VyU2Vzc2lvblBlcnNpc3RlbmNlO1xyXG4gICAgICAgIHRoaXMuX3Nob3VsZEluaXRQcm9hY3RpdmVseSA9IHRydWU7IC8vIFRoaXMgaXMgbGlnaHR3ZWlnaHQgZm9yIENvcmRvdmFcclxuICAgICAgICB0aGlzLmV2ZW50TWFuYWdlcnMgPSBuZXcgTWFwKCk7XHJcbiAgICAgICAgdGhpcy5vcmlnaW5WYWxpZGF0aW9uUHJvbWlzZXMgPSB7fTtcclxuICAgICAgICB0aGlzLl9jb21wbGV0ZVJlZGlyZWN0Rm4gPSBfZ2V0UmVkaXJlY3RSZXN1bHQ7XHJcbiAgICB9XHJcbiAgICBhc3luYyBfaW5pdGlhbGl6ZShhdXRoKSB7XHJcbiAgICAgICAgY29uc3Qga2V5ID0gYXV0aC5fa2V5KCk7XHJcbiAgICAgICAgbGV0IG1hbmFnZXIgPSB0aGlzLmV2ZW50TWFuYWdlcnMuZ2V0KGtleSk7XHJcbiAgICAgICAgaWYgKCFtYW5hZ2VyKSB7XHJcbiAgICAgICAgICAgIG1hbmFnZXIgPSBuZXcgQ29yZG92YUF1dGhFdmVudE1hbmFnZXIoYXV0aCk7XHJcbiAgICAgICAgICAgIHRoaXMuZXZlbnRNYW5hZ2Vycy5zZXQoa2V5LCBtYW5hZ2VyKTtcclxuICAgICAgICAgICAgdGhpcy5hdHRhY2hDYWxsYmFja0xpc3RlbmVycyhhdXRoLCBtYW5hZ2VyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG1hbmFnZXI7XHJcbiAgICB9XHJcbiAgICBfb3BlblBvcHVwKGF1dGgpIHtcclxuICAgICAgICBfZmFpbChhdXRoLCBcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIiAvKiBPUEVSQVRJT05fTk9UX1NVUFBPUlRFRCAqLyk7XHJcbiAgICB9XHJcbiAgICBhc3luYyBfb3BlblJlZGlyZWN0KGF1dGgsIHByb3ZpZGVyLCBhdXRoVHlwZSwgZXZlbnRJZCkge1xyXG4gICAgICAgIF9jaGVja0NvcmRvdmFDb25maWd1cmF0aW9uKGF1dGgpO1xyXG4gICAgICAgIGNvbnN0IG1hbmFnZXIgPSBhd2FpdCB0aGlzLl9pbml0aWFsaXplKGF1dGgpO1xyXG4gICAgICAgIGF3YWl0IG1hbmFnZXIuaW5pdGlhbGl6ZWQoKTtcclxuICAgICAgICAvLyBSZXNldCB0aGUgcGVyc2lzdGVkIHJlZGlyZWN0IHN0YXRlcy4gVGhpcyBkb2VzIG5vdCBtYXR0ZXIgb24gV2ViIHdoZXJlXHJcbiAgICAgICAgLy8gdGhlIHJlZGlyZWN0IGFsd2F5cyBibG93cyBhd2F5IGFwcGxpY2F0aW9uIHN0YXRlIGVudGlyZWx5LiBPbiBDb3Jkb3ZhLFxyXG4gICAgICAgIC8vIHRoZSBhcHAgbWFpbnRhaW5zIGNvbnRyb2wgZmxvdyB0aHJvdWdoIHRoZSByZWRpcmVjdC5cclxuICAgICAgICBtYW5hZ2VyLnJlc2V0UmVkaXJlY3QoKTtcclxuICAgICAgICBfY2xlYXJSZWRpcmVjdE91dGNvbWVzKCk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5fb3JpZ2luVmFsaWRhdGlvbihhdXRoKTtcclxuICAgICAgICBjb25zdCBldmVudCA9IF9nZW5lcmF0ZU5ld0V2ZW50KGF1dGgsIGF1dGhUeXBlLCBldmVudElkKTtcclxuICAgICAgICBhd2FpdCBfc2F2ZVBhcnRpYWxFdmVudChhdXRoLCBldmVudCk7XHJcbiAgICAgICAgY29uc3QgdXJsID0gYXdhaXQgX2dlbmVyYXRlSGFuZGxlclVybChhdXRoLCBldmVudCwgcHJvdmlkZXIpO1xyXG4gICAgICAgIGNvbnN0IGlhYlJlZiA9IGF3YWl0IF9wZXJmb3JtUmVkaXJlY3QodXJsKTtcclxuICAgICAgICByZXR1cm4gX3dhaXRGb3JBcHBSZXN1bWUoYXV0aCwgbWFuYWdlciwgaWFiUmVmKTtcclxuICAgIH1cclxuICAgIF9pc0lmcmFtZVdlYlN0b3JhZ2VTdXBwb3J0ZWQoX2F1dGgsIF9jYikge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWV0aG9kIG5vdCBpbXBsZW1lbnRlZC4nKTtcclxuICAgIH1cclxuICAgIF9vcmlnaW5WYWxpZGF0aW9uKGF1dGgpIHtcclxuICAgICAgICBjb25zdCBrZXkgPSBhdXRoLl9rZXkoKTtcclxuICAgICAgICBpZiAoIXRoaXMub3JpZ2luVmFsaWRhdGlvblByb21pc2VzW2tleV0pIHtcclxuICAgICAgICAgICAgdGhpcy5vcmlnaW5WYWxpZGF0aW9uUHJvbWlzZXNba2V5XSA9IF92YWxpZGF0ZU9yaWdpbihhdXRoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luVmFsaWRhdGlvblByb21pc2VzW2tleV07XHJcbiAgICB9XHJcbiAgICBhdHRhY2hDYWxsYmFja0xpc3RlbmVycyhhdXRoLCBtYW5hZ2VyKSB7XHJcbiAgICAgICAgLy8gR2V0IHRoZSBnbG9iYWwgcGx1Z2luc1xyXG4gICAgICAgIGNvbnN0IHsgdW5pdmVyc2FsTGlua3MsIGhhbmRsZU9wZW5VUkwsIEJ1aWxkSW5mbyB9ID0gX2NvcmRvdmFXaW5kb3coKTtcclxuICAgICAgICBjb25zdCBub0V2ZW50VGltZW91dCA9IHNldFRpbWVvdXQoYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBXZSBkaWRuJ3Qgc2VlIHRoYXQgaW5pdGlhbCBldmVudC4gQ2xlYXIgYW55IHBlbmRpbmcgb2JqZWN0IGFuZFxyXG4gICAgICAgICAgICAvLyBkaXNwYXRjaCBubyBldmVudFxyXG4gICAgICAgICAgICBhd2FpdCBfZ2V0QW5kUmVtb3ZlRXZlbnQoYXV0aCk7XHJcbiAgICAgICAgICAgIG1hbmFnZXIub25FdmVudChnZW5lcmF0ZU5vRXZlbnQoKSk7XHJcbiAgICAgICAgfSwgSU5JVElBTF9FVkVOVF9USU1FT1VUX01TKTtcclxuICAgICAgICBjb25zdCB1bml2ZXJzYWxMaW5rc0NiID0gYXN5bmMgKGV2ZW50RGF0YSkgPT4ge1xyXG4gICAgICAgICAgICAvLyBXZSBoYXZlIGFuIGV2ZW50IHNvIHdlIGNhbiBjbGVhciB0aGUgbm8gZXZlbnQgdGltZW91dFxyXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQobm9FdmVudFRpbWVvdXQpO1xyXG4gICAgICAgICAgICBjb25zdCBwYXJ0aWFsRXZlbnQgPSBhd2FpdCBfZ2V0QW5kUmVtb3ZlRXZlbnQoYXV0aCk7XHJcbiAgICAgICAgICAgIGxldCBmaW5hbEV2ZW50ID0gbnVsbDtcclxuICAgICAgICAgICAgaWYgKHBhcnRpYWxFdmVudCAmJiAoZXZlbnREYXRhID09PSBudWxsIHx8IGV2ZW50RGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXZlbnREYXRhWyd1cmwnXSkpIHtcclxuICAgICAgICAgICAgICAgIGZpbmFsRXZlbnQgPSBfZXZlbnRGcm9tUGFydGlhbEFuZFVybChwYXJ0aWFsRXZlbnQsIGV2ZW50RGF0YVsndXJsJ10pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIElmIGZpbmFsRXZlbnQgaXMgbmV2ZXIgZmlsbGVkLCB0cmlnZ2VyIHdpdGggbm8gZXZlbnRcclxuICAgICAgICAgICAgbWFuYWdlci5vbkV2ZW50KGZpbmFsRXZlbnQgfHwgZ2VuZXJhdGVOb0V2ZW50KCkpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgLy8gVW5pdmVyc2FsIGxpbmtzIHN1YnNjcmliZXIgZG9lc24ndCBleGlzdCBmb3IgaU9TLCBzbyB3ZSBuZWVkIHRvIGNoZWNrXHJcbiAgICAgICAgaWYgKHR5cGVvZiB1bml2ZXJzYWxMaW5rcyAhPT0gJ3VuZGVmaW5lZCcgJiZcclxuICAgICAgICAgICAgdHlwZW9mIHVuaXZlcnNhbExpbmtzLnN1YnNjcmliZSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICB1bml2ZXJzYWxMaW5rcy5zdWJzY3JpYmUobnVsbCwgdW5pdmVyc2FsTGlua3NDYik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGlPUyA3IG9yIDggY3VzdG9tIFVSTCBzY2hlbWVzLlxyXG4gICAgICAgIC8vIFRoaXMgaXMgYWxzbyB0aGUgY3VycmVudCBkZWZhdWx0IGJlaGF2aW9yIGZvciBpT1MgOSsuXHJcbiAgICAgICAgLy8gRm9yIHRoaXMgdG8gd29yaywgY29yZG92YS1wbHVnaW4tY3VzdG9tdXJsc2NoZW1lIG5lZWRzIHRvIGJlIGluc3RhbGxlZC5cclxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vRWRkeVZlcmJydWdnZW4vQ3VzdG9tLVVSTC1zY2hlbWVcclxuICAgICAgICAvLyBEbyBub3Qgb3ZlcndyaXRlIHRoZSBleGlzdGluZyBkZXZlbG9wZXIncyBVUkwgaGFuZGxlci5cclxuICAgICAgICBjb25zdCBleGlzdGluZ0hhbmRsZU9wZW5VUkwgPSBoYW5kbGVPcGVuVVJMO1xyXG4gICAgICAgIGNvbnN0IHBhY2thZ2VQcmVmaXggPSBgJHtCdWlsZEluZm8ucGFja2FnZU5hbWUudG9Mb3dlckNhc2UoKX06Ly9gO1xyXG4gICAgICAgIF9jb3Jkb3ZhV2luZG93KCkuaGFuZGxlT3BlblVSTCA9IGFzeW5jICh1cmwpID0+IHtcclxuICAgICAgICAgICAgaWYgKHVybC50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgocGFja2FnZVByZWZpeCkpIHtcclxuICAgICAgICAgICAgICAgIC8vIFdlIHdhbnQgdGhpcyBpbnRlbnRpb25hbGx5IHRvIGZsb2F0XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXHJcbiAgICAgICAgICAgICAgICB1bml2ZXJzYWxMaW5rc0NiKHsgdXJsIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIENhbGwgdGhlIGRldmVsb3BlcidzIGhhbmRsZXIgaWYgaXQgaXMgcHJlc2VudC5cclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBleGlzdGluZ0hhbmRsZU9wZW5VUkwgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdIYW5kbGVPcGVuVVJMKHVybCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgaXMgYSBkZXZlbG9wZXIgZXJyb3IuIERvbid0IHN0b3AgdGhlIGZsb3cgb2YgdGhlIFNESy5cclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogQW4gaW1wbGVtZW50YXRpb24gb2Yge0BsaW5rIFBvcHVwUmVkaXJlY3RSZXNvbHZlcn0gc3VpdGFibGUgZm9yIENvcmRvdmFcclxuICogYmFzZWQgYXBwbGljYXRpb25zLlxyXG4gKlxyXG4gKiBAcHVibGljXHJcbiAqL1xyXG5jb25zdCBjb3Jkb3ZhUG9wdXBSZWRpcmVjdFJlc29sdmVyID0gQ29yZG92YVBvcHVwUmVkaXJlY3RSZXNvbHZlcjtcclxuZnVuY3Rpb24gZ2VuZXJhdGVOb0V2ZW50KCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICB0eXBlOiBcInVua25vd25cIiAvKiBVTktOT1dOICovLFxyXG4gICAgICAgIGV2ZW50SWQ6IG51bGwsXHJcbiAgICAgICAgc2Vzc2lvbklkOiBudWxsLFxyXG4gICAgICAgIHVybFJlc3BvbnNlOiBudWxsLFxyXG4gICAgICAgIHBvc3RCb2R5OiBudWxsLFxyXG4gICAgICAgIHRlbmFudElkOiBudWxsLFxyXG4gICAgICAgIGVycm9yOiBfY3JlYXRlRXJyb3IoXCJuby1hdXRoLWV2ZW50XCIgLyogTk9fQVVUSF9FVkVOVCAqLylcclxuICAgIH07XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLy8gVGhpcyBmdW5jdGlvbiBzaG91bGQgb25seSBiZSBjYWxsZWQgYnkgZnJhbWV3b3JrcyAoZS5nLiBGaXJlYmFzZVVJLXdlYikgdG8gbG9nIHRoZWlyIHVzYWdlLlxyXG4vLyBJdCBpcyBub3QgaW50ZW5kZWQgZm9yIGRpcmVjdCB1c2UgYnkgZGV2ZWxvcGVyIGFwcHMuIE5PIGpzZG9jIGhlcmUgdG8gaW50ZW50aW9uYWxseSBsZWF2ZSBpdCBvdXRcclxuLy8gb2YgYXV0b2dlbmVyYXRlZCBkb2N1bWVudGF0aW9uIHBhZ2VzIHRvIHJlZHVjZSBhY2NpZGVudGFsIG1pc3VzZS5cclxuZnVuY3Rpb24gYWRkRnJhbWV3b3JrRm9yTG9nZ2luZyhhdXRoLCBmcmFtZXdvcmspIHtcclxuICAgIF9jYXN0QXV0aChhdXRoKS5fbG9nRnJhbWV3b3JrKGZyYW1ld29yayk7XHJcbn1cblxuZXhwb3J0IHsgYWRkRnJhbWV3b3JrRm9yTG9nZ2luZywgY29yZG92YVBvcHVwUmVkaXJlY3RSZXNvbHZlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJuYWwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@firebase/auth/dist/esm2017/internal.js\n");

/***/ }),

/***/ "./pages/auth.js":
/*!***********************!*\
  !*** ./pages/auth.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mnt_c_code_web_design_Next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/regenerator-runtime/runtime.js */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var _mnt_c_code_web_design_Next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mnt_c_code_web_design_Next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/compat/app */ \"./node_modules/firebase/compat/app/dist/index.esm.js\");\n/* harmony import */ var firebase_compat_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/compat/auth */ \"./node_modules/firebase/compat/auth/dist/index.esm.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nvar _this = undefined;\nvar clientCredentials = {\n    apiKey: \"AIzaSyDsTtpxfhD9_4XjYkkFKEL_KO_aRbqEPxY\",\n    authDomain: \"nextgame-8b6e5.firebaseapp.com\",\n    databaseURL: \"https://nextgame-8b6e5-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"nextgame-8b6e5\",\n    storageBucket: \"nextgame-8b6e5.appspot.com\",\n    messagingSenderId: \"37644482862\",\n    appId: \"1:37644482862:web:26b1e67712bb7f2b3162bf\"\n};\nvar firebaseAuthConfig = {\n    signInFlow: 'popup',\n    // Auth providers\n    // https://github.com/firebase/firebaseui-web#configure-oauth-providers\n    signInOptions: [\n        {\n            provider: firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__[\"default\"].auth.EmailAuthProvider.PROVIDER_ID,\n            requireDisplayName: true\n        },\n        // add additional auth flows below\n        firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__[\"default\"].auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__[\"default\"].auth.TwitterAuthProvider.PROVIDER_ID,\n        firebase_compat_app__WEBPACK_IMPORTED_MODULE_3__[\"default\"].auth.GithubAuthProvider.PROVIDER_ID, \n    ],\n    signInSuccessUrl: '/',\n    credentialHelper: 'none',\n    callbacks: {\n        signInSuccessWithAuthResult: _asyncToGenerator(_mnt_c_code_web_design_Next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(param, redirectUrl) {\n            var user, userData;\n            return _mnt_c_code_web_design_Next_node_modules_regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_ctx) {\n                while(1)switch(_ctx.prev = _ctx.next){\n                    case 0:\n                        user = param.user;\n                        userData = mapUserData(user);\n                        setUserCookie(userData);\n                    case 3:\n                    case \"end\":\n                        return _ctx.stop();\n                }\n            }, _callee);\n        }))\n    }\n};\nvar auth = function() {\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\"div\", {\n        __source: {\n            fileName: \"/mnt/c/code/web_design/Next/pages/auth.js\",\n            lineNumber: 39,\n            columnNumber: 9\n        },\n        __self: _this,\n        children: \"Hi\"\n    }));\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (auth);\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hdXRoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF5QjtBQUNpQjtBQUNiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQzdCLEdBQUssQ0FBQ0UsaUJBQWlCLEdBQUcsQ0FBQztJQUN2QkMsTUFBTSxFQUFFQyx5Q0FBd0M7SUFDaERHLFVBQVUsRUFBRUgsZ0NBQTRDO0lBQ3hESyxXQUFXLEVBQUVMLDBFQUE2QztJQUMxRE8sU0FBUyxFQUFFUCxnQkFBMkM7SUFDdERTLGFBQWEsRUFBRVQsNEJBQStDO0lBQzlEVyxpQkFBaUIsRUFBRVgsYUFBb0Q7SUFDdkVhLEtBQUssRUFBRWIsMENBQXVDO0FBQ2xELENBQUM7QUFDRCxHQUFLLENBQUNlLGtCQUFrQixHQUFHLENBQUM7SUFDeEJDLFVBQVUsRUFBRSxDQUFPO0lBQ25CLEVBQWlCO0lBQ2pCLEVBQXVFO0lBQ3ZFQyxhQUFhLEVBQUUsQ0FBQztRQUNaLENBQUM7WUFDR0MsUUFBUSxFQUFFckIsOEZBQTJDO1lBQ3JEeUIsa0JBQWtCLEVBQUUsSUFBSTtRQUM1QixDQUFDO1FBQ0QsRUFBa0M7UUFDbEN6QiwrRkFBNEM7UUFDNUNBLGdHQUE2QztRQUM3Q0EsK0ZBQTRDO0lBQ2hELENBQUM7SUFDRDZCLGdCQUFnQixFQUFFLENBQUc7SUFDckJDLGdCQUFnQixFQUFFLENBQU07SUFDeEJDLFNBQVMsRUFBRSxDQUFDO1FBQ1JDLDJCQUEyQix3SUFBRSxRQUFRLGdCQUFTQyxXQUFXLEVBQUssQ0FBQztnQkFBekJDLElBQUksRUFDaENDLFFBQVE7Ozs7d0JBRG9CRCxJQUFJLFNBQUpBLElBQUk7d0JBQ2hDQyxRQUFRLEdBQUdDLFdBQVcsQ0FBQ0YsSUFBSTt3QkFDakNHLGFBQWEsQ0FBQ0YsUUFBUTs7Ozs7O1FBQzFCLENBQUM7SUFDTCxDQUFDO0FBQ0wsQ0FBQztBQUNELEdBQUssQ0FBQ2IsSUFBSSxHQUFHLFFBQVEsR0FBRixDQUFDO0lBRWhCLE1BQU0sc0VBQ0RnQixDQUFHOzs7Ozs7O2tCQUFDLENBRUw7O0FBRVIsQ0FBQztBQUVELCtEQUFlaEIsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9wYWdlcy9hdXRoLmpzP2RmNTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgZmlyZWJhc2UgZnJvbSAnZmlyZWJhc2UvY29tcGF0L2FwcCdcclxuaW1wb3J0ICdmaXJlYmFzZS9jb21wYXQvYXV0aCdcclxuY29uc3QgY2xpZW50Q3JlZGVudGlhbHMgPSB7XHJcbiAgICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVksXHJcbiAgICBhdXRoRG9tYWluOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BVVRIX0RPTUFJTixcclxuICAgIGRhdGFiYXNlVVJMOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9EQVRBQkFTRV9VUkwsXHJcbiAgICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQsXHJcbiAgICBzdG9yYWdlQnVja2V0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9TVE9SQUdFX0JVQ0tFVCxcclxuICAgIG1lc3NhZ2luZ1NlbmRlcklkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lELFxyXG4gICAgYXBwSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCxcclxufVxyXG5jb25zdCBmaXJlYmFzZUF1dGhDb25maWcgPSB7XHJcbiAgICBzaWduSW5GbG93OiAncG9wdXAnLFxyXG4gICAgLy8gQXV0aCBwcm92aWRlcnNcclxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9maXJlYmFzZS9maXJlYmFzZXVpLXdlYiNjb25maWd1cmUtb2F1dGgtcHJvdmlkZXJzXHJcbiAgICBzaWduSW5PcHRpb25zOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBwcm92aWRlcjogZmlyZWJhc2UuYXV0aC5FbWFpbEF1dGhQcm92aWRlci5QUk9WSURFUl9JRCxcclxuICAgICAgICAgICAgcmVxdWlyZURpc3BsYXlOYW1lOiB0cnVlLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLy8gYWRkIGFkZGl0aW9uYWwgYXV0aCBmbG93cyBiZWxvd1xyXG4gICAgICAgIGZpcmViYXNlLmF1dGguR29vZ2xlQXV0aFByb3ZpZGVyLlBST1ZJREVSX0lELFxyXG4gICAgICAgIGZpcmViYXNlLmF1dGguVHdpdHRlckF1dGhQcm92aWRlci5QUk9WSURFUl9JRCxcclxuICAgICAgICBmaXJlYmFzZS5hdXRoLkdpdGh1YkF1dGhQcm92aWRlci5QUk9WSURFUl9JRCxcclxuICAgIF0sXHJcbiAgICBzaWduSW5TdWNjZXNzVXJsOiAnLycsXHJcbiAgICBjcmVkZW50aWFsSGVscGVyOiAnbm9uZScsXHJcbiAgICBjYWxsYmFja3M6IHtcclxuICAgICAgICBzaWduSW5TdWNjZXNzV2l0aEF1dGhSZXN1bHQ6IGFzeW5jICh7IHVzZXIgfSwgcmVkaXJlY3RVcmwpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgdXNlckRhdGEgPSBtYXBVc2VyRGF0YSh1c2VyKVxyXG4gICAgICAgICAgICBzZXRVc2VyQ29va2llKHVzZXJEYXRhKVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG59XHJcbmNvbnN0IGF1dGggPSAoKSA9PiB7XHJcbiAgICBcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgSGlcclxuICAgICAgICA8L2Rpdj5cclxuICAgIClcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXV0aFxyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJmaXJlYmFzZSIsImNsaWVudENyZWRlbnRpYWxzIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkiLCJhdXRoRG9tYWluIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4iLCJkYXRhYmFzZVVSTCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0RBVEFCQVNFX1VSTCIsInByb2plY3RJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQiLCJzdG9yYWdlQnVja2V0IiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfU1RPUkFHRV9CVUNLRVQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX01FU1NBR0lOR19TRU5ERVJfSUQiLCJhcHBJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCIsImZpcmViYXNlQXV0aENvbmZpZyIsInNpZ25JbkZsb3ciLCJzaWduSW5PcHRpb25zIiwicHJvdmlkZXIiLCJhdXRoIiwiRW1haWxBdXRoUHJvdmlkZXIiLCJQUk9WSURFUl9JRCIsInJlcXVpcmVEaXNwbGF5TmFtZSIsIkdvb2dsZUF1dGhQcm92aWRlciIsIlR3aXR0ZXJBdXRoUHJvdmlkZXIiLCJHaXRodWJBdXRoUHJvdmlkZXIiLCJzaWduSW5TdWNjZXNzVXJsIiwiY3JlZGVudGlhbEhlbHBlciIsImNhbGxiYWNrcyIsInNpZ25JblN1Y2Nlc3NXaXRoQXV0aFJlc3VsdCIsInJlZGlyZWN0VXJsIiwidXNlciIsInVzZXJEYXRhIiwibWFwVXNlckRhdGEiLCJzZXRVc2VyQ29va2llIiwiZGl2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/auth.js\n");

/***/ }),

/***/ "./node_modules/firebase/compat/app/dist/index.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/firebase/compat/app/dist/index.esm.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport safe */ _firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app-compat */ \"./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js\");\n\n\n\nvar name = \"firebase\";\nvar version = \"9.6.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n_firebase_app_compat__WEBPACK_IMPORTED_MODULE_0__[\"default\"].registerVersion(name, version, 'app-compat');\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvY29tcGF0L2FwcC9kaXN0L2luZGV4LmVzbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0QztBQUNHOztBQUUvQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEVBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9maXJlYmFzZS9jb21wYXQvYXBwL2Rpc3QvaW5kZXguZXNtLmpzPzZjNGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZpcmViYXNlIGZyb20gJ0BmaXJlYmFzZS9hcHAtY29tcGF0JztcbmV4cG9ydCB7IGRlZmF1bHQgfSBmcm9tICdAZmlyZWJhc2UvYXBwLWNvbXBhdCc7XG5cbnZhciBuYW1lID0gXCJmaXJlYmFzZVwiO1xudmFyIHZlcnNpb24gPSBcIjkuNi4xXCI7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmZpcmViYXNlLnJlZ2lzdGVyVmVyc2lvbihuYW1lLCB2ZXJzaW9uLCAnYXBwLWNvbXBhdCcpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXNtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/firebase/compat/app/dist/index.esm.js\n");

/***/ }),

/***/ "./node_modules/firebase/compat/auth/dist/index.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/firebase/compat/auth/dist/index.esm.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _firebase_auth_compat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/auth-compat */ \"./node_modules/@firebase/auth-compat/dist/index.esm2017.js\");\n\n//# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvY29tcGF0L2F1dGgvZGlzdC9pbmRleC5lc20uanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBK0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2ZpcmViYXNlL2NvbXBhdC9hdXRoL2Rpc3QvaW5kZXguZXNtLmpzPzY4M2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAZmlyZWJhc2UvYXV0aC1jb21wYXQnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXNtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/firebase/compat/auth/dist/index.esm.js\n");

/***/ }),

/***/ "./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ firebase; }\n/* harmony export */ });\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/logger */ \"./node_modules/@firebase/logger/dist/esm/index.esm2017.js\");\n\n\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        (0,_firebase_app__WEBPACK_IMPORTED_MODULE_2__._addComponent)(_delegate, new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('app-compat', () => this, \"PUBLIC\" /* PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return (0,_firebase_app__WEBPACK_IMPORTED_MODULE_2__.deleteApp)(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _firebase_app__WEBPACK_IMPORTED_MODULE_2__._DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _firebase_app__WEBPACK_IMPORTED_MODULE_2__._DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        (0,_firebase_app__WEBPACK_IMPORTED_MODULE_2__._addComponent)(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        (0,_firebase_app__WEBPACK_IMPORTED_MODULE_2__._addOrOverwriteComponent)(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: _firebase_app__WEBPACK_IMPORTED_MODULE_2__.registerVersion,\r\n        setLogLevel: _firebase_app__WEBPACK_IMPORTED_MODULE_2__.setLogLevel,\r\n        onLog: _firebase_app__WEBPACK_IMPORTED_MODULE_2__.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: _firebase_app__WEBPACK_IMPORTED_MODULE_2__.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs: _firebase_app__WEBPACK_IMPORTED_MODULE_2__\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || _firebase_app__WEBPACK_IMPORTED_MODULE_2__._DEFAULT_ENTRY_NAME;\r\n        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = _firebase_app__WEBPACK_IMPORTED_MODULE_2__.initializeApp(options, rawConfig);\r\n        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (_firebase_app__WEBPACK_IMPORTED_MODULE_2__._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.createSubscribe,\r\n        ErrorFactory: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory,\r\n        deepExtend: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new _firebase_logger__WEBPACK_IMPORTED_MODULE_3__.Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.1.12\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    (0,_firebase_app__WEBPACK_IMPORTED_MODULE_2__.registerVersion)(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isBrowser)() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\n\n//# sourceMappingURL=index.esm2017.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL2FwcC1jb21wYXQvZGlzdC9lc20vaW5kZXguZXNtMjAxNy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnRztBQUNoRDtBQUNIO0FBQzRFO0FBQy9FOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQWEsZ0JBQWdCLDBEQUFTO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLG1CQUFtQix3REFBUztBQUM1QixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLDhEQUFtQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsOERBQW1CO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw0REFBYTtBQUNyQjtBQUNBO0FBQ0EsUUFBUSx1RUFBd0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsU0FBUztBQUN6RDtBQUNBLG9FQUFvRSxTQUFTO0FBQzdFO0FBQ0E7QUFDQSwwQkFBMEIsd0RBQVk7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwwREFBMkI7QUFDcEQscUJBQXFCLHNEQUF1QjtBQUM1QyxlQUFlLGdEQUFpQjtBQUNoQztBQUNBO0FBQ0EscUJBQXFCLHNEQUF1QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOERBQStCO0FBQ3RELGFBQWEsd0RBQVE7QUFDckIsZ0VBQWdFLGVBQWU7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0Q7QUFDeEQsb0JBQW9CLHdEQUF5QjtBQUM3QyxZQUFZLHdEQUFRO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2REFBOEI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMERBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVELHlCQUF5QjtBQUNoRjtBQUNBLHVCQUF1QjtBQUN2QixvQkFBb0I7QUFDcEIsa0JBQWtCLDBEQUFFO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMERBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsb0RBQU07O0FBRXpCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSw4REFBZTtBQUNuQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHlEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGZpcmViYXNlL2FwcC1jb21wYXQvZGlzdC9lc20vaW5kZXguZXNtMjAxNy5qcz8wNjIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVycm9yRmFjdG9yeSwgY29udGFpbnMsIGRlZXBFeHRlbmQsIGNyZWF0ZVN1YnNjcmliZSwgaXNCcm93c2VyIH0gZnJvbSAnQGZpcmViYXNlL3V0aWwnO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGZpcmViYXNlL2NvbXBvbmVudCc7XG5pbXBvcnQgKiBhcyBtb2R1bGFyQVBJcyBmcm9tICdAZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7IF9hZGRDb21wb25lbnQsIGRlbGV0ZUFwcCwgX0RFRkFVTFRfRU5UUllfTkFNRSwgX2FkZE9yT3ZlcndyaXRlQ29tcG9uZW50LCByZWdpc3RlclZlcnNpb24gfSBmcm9tICdAZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7IExvZ2dlciB9IGZyb20gJ0BmaXJlYmFzZS9sb2dnZXInO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogR2xvYmFsIGNvbnRleHQgb2JqZWN0IGZvciBhIGNvbGxlY3Rpb24gb2Ygc2VydmljZXMgdXNpbmdcclxuICogYSBzaGFyZWQgYXV0aGVudGljYXRpb24gc3RhdGUuXHJcbiAqXHJcbiAqIG1hcmtlZCBhcyBpbnRlcm5hbCBiZWNhdXNlIGl0IHJlZmVyZW5jZXMgaW50ZXJuYWwgdHlwZXMgZXhwb3J0ZWQgZnJvbSBAZmlyZWJhc2UvYXBwXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuY2xhc3MgRmlyZWJhc2VBcHBJbXBsIHtcclxuICAgIGNvbnN0cnVjdG9yKF9kZWxlZ2F0ZSwgZmlyZWJhc2UpIHtcclxuICAgICAgICB0aGlzLl9kZWxlZ2F0ZSA9IF9kZWxlZ2F0ZTtcclxuICAgICAgICB0aGlzLmZpcmViYXNlID0gZmlyZWJhc2U7XHJcbiAgICAgICAgLy8gYWRkIGl0c2VsZiB0byBjb250YWluZXJcclxuICAgICAgICBfYWRkQ29tcG9uZW50KF9kZWxlZ2F0ZSwgbmV3IENvbXBvbmVudCgnYXBwLWNvbXBhdCcsICgpID0+IHRoaXMsIFwiUFVCTElDXCIgLyogUFVCTElDICovKSk7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBfZGVsZWdhdGUuY29udGFpbmVyO1xyXG4gICAgfVxyXG4gICAgZ2V0IGF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGVsZWdhdGUuYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkO1xyXG4gICAgfVxyXG4gICAgc2V0IGF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZCh2YWwpIHtcclxuICAgICAgICB0aGlzLl9kZWxlZ2F0ZS5hdXRvbWF0aWNEYXRhQ29sbGVjdGlvbkVuYWJsZWQgPSB2YWw7XHJcbiAgICB9XHJcbiAgICBnZXQgbmFtZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGVsZWdhdGUubmFtZTtcclxuICAgIH1cclxuICAgIGdldCBvcHRpb25zKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kZWxlZ2F0ZS5vcHRpb25zO1xyXG4gICAgfVxyXG4gICAgZGVsZXRlKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fZGVsZWdhdGUuY2hlY2tEZXN0cm95ZWQoKTtcclxuICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH0pLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmZpcmViYXNlLklOVEVSTkFMLnJlbW92ZUFwcCh0aGlzLm5hbWUpO1xyXG4gICAgICAgICAgICByZXR1cm4gZGVsZXRlQXBwKHRoaXMuX2RlbGVnYXRlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGEgc2VydmljZSBpbnN0YW5jZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBhcHAgKGNyZWF0aW5nIGl0XHJcbiAgICAgKiBvbiBkZW1hbmQpLCBpZGVudGlmaWVkIGJ5IHRoZSBwYXNzZWQgaW5zdGFuY2VJZGVudGlmaWVyLlxyXG4gICAgICpcclxuICAgICAqIE5PVEU6IEN1cnJlbnRseSBzdG9yYWdlIGFuZCBmdW5jdGlvbnMgYXJlIHRoZSBvbmx5IG9uZXMgdGhhdCBhcmUgbGV2ZXJhZ2luZyB0aGlzXHJcbiAgICAgKiBmdW5jdGlvbmFsaXR5LiBUaGV5IGludm9rZSBpdCBieSBjYWxsaW5nOlxyXG4gICAgICpcclxuICAgICAqIGBgYGphdmFzY3JpcHRcclxuICAgICAqIGZpcmViYXNlLmFwcCgpLnN0b3JhZ2UoJ1NUT1JBR0UgQlVDS0VUIElEJylcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIFRoZSBzZXJ2aWNlIG5hbWUgaXMgcGFzc2VkIHRvIHRoaXMgYWxyZWFkeVxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIF9nZXRTZXJ2aWNlKG5hbWUsIGluc3RhbmNlSWRlbnRpZmllciA9IF9ERUZBVUxUX0VOVFJZX05BTUUpIHtcclxuICAgICAgICB2YXIgX2E7XHJcbiAgICAgICAgdGhpcy5fZGVsZWdhdGUuY2hlY2tEZXN0cm95ZWQoKTtcclxuICAgICAgICAvLyBJbml0aWFsaXplIGluc3RhbmNlIGlmIEluc3RhdGlhdGlvbk1vZGUgaXMgYEVYUExJQ0lUYC5cclxuICAgICAgICBjb25zdCBwcm92aWRlciA9IHRoaXMuX2RlbGVnYXRlLmNvbnRhaW5lci5nZXRQcm92aWRlcihuYW1lKTtcclxuICAgICAgICBpZiAoIXByb3ZpZGVyLmlzSW5pdGlhbGl6ZWQoKSAmJlxyXG4gICAgICAgICAgICAoKF9hID0gcHJvdmlkZXIuZ2V0Q29tcG9uZW50KCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5pbnN0YW50aWF0aW9uTW9kZSkgPT09IFwiRVhQTElDSVRcIiAvKiBFWFBMSUNJVCAqLykge1xyXG4gICAgICAgICAgICBwcm92aWRlci5pbml0aWFsaXplKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGdldEltbWVkaWF0ZSB3aWxsIGFsd2F5cyBzdWNjZWVkIGJlY2F1c2UgX2dldFNlcnZpY2UgaXMgb25seSBjYWxsZWQgZm9yIHJlZ2lzdGVyZWQgY29tcG9uZW50cy5cclxuICAgICAgICByZXR1cm4gcHJvdmlkZXIuZ2V0SW1tZWRpYXRlKHtcclxuICAgICAgICAgICAgaWRlbnRpZmllcjogaW5zdGFuY2VJZGVudGlmaWVyXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSBhIHNlcnZpY2UgaW5zdGFuY2UgZnJvbSB0aGUgY2FjaGUsIHNvIHdlIHdpbGwgY3JlYXRlIGEgbmV3IGluc3RhbmNlIGZvciB0aGlzIHNlcnZpY2VcclxuICAgICAqIHdoZW4gcGVvcGxlIHRyeSB0byBnZXQgaXQgYWdhaW4uXHJcbiAgICAgKlxyXG4gICAgICogTk9URTogY3VycmVudGx5IG9ubHkgZmlyZXN0b3JlIHVzZXMgdGhpcyBmdW5jdGlvbmFsaXR5IHRvIHN1cHBvcnQgZmlyZXN0b3JlIHNodXRkb3duLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBuYW1lIFRoZSBzZXJ2aWNlIG5hbWVcclxuICAgICAqIEBwYXJhbSBpbnN0YW5jZUlkZW50aWZpZXIgaW5zdGFuY2UgaWRlbnRpZmllciBpbiBjYXNlIG11bHRpcGxlIGluc3RhbmNlcyBhcmUgYWxsb3dlZFxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIF9yZW1vdmVTZXJ2aWNlSW5zdGFuY2UobmFtZSwgaW5zdGFuY2VJZGVudGlmaWVyID0gX0RFRkFVTFRfRU5UUllfTkFNRSkge1xyXG4gICAgICAgIHRoaXMuX2RlbGVnYXRlLmNvbnRhaW5lclxyXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICAuZ2V0UHJvdmlkZXIobmFtZSlcclxuICAgICAgICAgICAgLmNsZWFySW5zdGFuY2UoaW5zdGFuY2VJZGVudGlmaWVyKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQHBhcmFtIGNvbXBvbmVudCB0aGUgY29tcG9uZW50IGJlaW5nIGFkZGVkIHRvIHRoaXMgYXBwJ3MgY29udGFpbmVyXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgX2FkZENvbXBvbmVudChjb21wb25lbnQpIHtcclxuICAgICAgICBfYWRkQ29tcG9uZW50KHRoaXMuX2RlbGVnYXRlLCBjb21wb25lbnQpO1xyXG4gICAgfVxyXG4gICAgX2FkZE9yT3ZlcndyaXRlQ29tcG9uZW50KGNvbXBvbmVudCkge1xyXG4gICAgICAgIF9hZGRPck92ZXJ3cml0ZUNvbXBvbmVudCh0aGlzLl9kZWxlZ2F0ZSwgY29tcG9uZW50KTtcclxuICAgIH1cclxuICAgIHRvSlNPTigpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXHJcbiAgICAgICAgICAgIGF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZDogdGhpcy5hdXRvbWF0aWNEYXRhQ29sbGVjdGlvbkVuYWJsZWQsXHJcbiAgICAgICAgICAgIG9wdGlvbnM6IHRoaXMub3B0aW9uc1xyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuLy8gVE9ETzogaW52ZXN0aWdhdGUgd2h5IHRoZSBmb2xsb3dpbmcgbmVlZHMgdG8gYmUgY29tbWVudGVkIG91dFxyXG4vLyBQcmV2ZW50IGRlYWQtY29kZSBlbGltaW5hdGlvbiBvZiB0aGVzZSBtZXRob2RzIHcvbyBpbnZhbGlkIHByb3BlcnR5XHJcbi8vIGNvcHlpbmcuXHJcbi8vIChGaXJlYmFzZUFwcEltcGwucHJvdG90eXBlLm5hbWUgJiYgRmlyZWJhc2VBcHBJbXBsLnByb3RvdHlwZS5vcHRpb25zKSB8fFxyXG4vLyAgIEZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGUuZGVsZXRlIHx8XHJcbi8vICAgY29uc29sZS5sb2coJ2RjJyk7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IEVSUk9SUyA9IHtcclxuICAgIFtcIm5vLWFwcFwiIC8qIE5PX0FQUCAqL106IFwiTm8gRmlyZWJhc2UgQXBwICd7JGFwcE5hbWV9JyBoYXMgYmVlbiBjcmVhdGVkIC0gXCIgK1xyXG4gICAgICAgICdjYWxsIEZpcmViYXNlIEFwcC5pbml0aWFsaXplQXBwKCknLFxyXG4gICAgW1wiaW52YWxpZC1hcHAtYXJndW1lbnRcIiAvKiBJTlZBTElEX0FQUF9BUkdVTUVOVCAqL106ICdmaXJlYmFzZS57JGFwcE5hbWV9KCkgdGFrZXMgZWl0aGVyIG5vIGFyZ3VtZW50IG9yIGEgJyArXHJcbiAgICAgICAgJ0ZpcmViYXNlIEFwcCBpbnN0YW5jZS4nXHJcbn07XHJcbmNvbnN0IEVSUk9SX0ZBQ1RPUlkgPSBuZXcgRXJyb3JGYWN0b3J5KCdhcHAtY29tcGF0JywgJ0ZpcmViYXNlJywgRVJST1JTKTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEJlY2F1c2UgYXV0aCBjYW4ndCBzaGFyZSBjb2RlIHdpdGggb3RoZXIgY29tcG9uZW50cywgd2UgYXR0YWNoIHRoZSB1dGlsaXR5IGZ1bmN0aW9uc1xyXG4gKiBpbiBhbiBpbnRlcm5hbCBuYW1lc3BhY2UgdG8gc2hhcmUgY29kZS5cclxuICogVGhpcyBmdW5jdGlvbiByZXR1cm4gYSBmaXJlYmFzZSBuYW1lc3BhY2Ugb2JqZWN0IHdpdGhvdXRcclxuICogYW55IHV0aWxpdHkgZnVuY3Rpb25zLCBzbyBpdCBjYW4gYmUgc2hhcmVkIGJldHdlZW4gdGhlIHJlZ3VsYXIgZmlyZWJhc2VOYW1lc3BhY2UgYW5kXHJcbiAqIHRoZSBsaXRlIHZlcnNpb24uXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVGaXJlYmFzZU5hbWVzcGFjZUNvcmUoZmlyZWJhc2VBcHBJbXBsKSB7XHJcbiAgICBjb25zdCBhcHBzID0ge307XHJcbiAgICAvLyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgLy8gY29uc3QgY29tcG9uZW50cyA9IG5ldyBNYXA8c3RyaW5nLCBDb21wb25lbnQ8YW55Pj4oKTtcclxuICAgIC8vIEEgbmFtZXNwYWNlIGlzIGEgcGxhaW4gSmF2YVNjcmlwdCBPYmplY3QuXHJcbiAgICBjb25zdCBuYW1lc3BhY2UgPSB7XHJcbiAgICAgICAgLy8gSGFjayB0byBwcmV2ZW50IEJhYmVsIGZyb20gbW9kaWZ5aW5nIHRoZSBvYmplY3QgcmV0dXJuZWRcclxuICAgICAgICAvLyBhcyB0aGUgZmlyZWJhc2UgbmFtZXNwYWNlLlxyXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICBfX2VzTW9kdWxlOiB0cnVlLFxyXG4gICAgICAgIGluaXRpYWxpemVBcHA6IGluaXRpYWxpemVBcHBDb21wYXQsXHJcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgIGFwcCxcclxuICAgICAgICByZWdpc3RlclZlcnNpb246IG1vZHVsYXJBUElzLnJlZ2lzdGVyVmVyc2lvbixcclxuICAgICAgICBzZXRMb2dMZXZlbDogbW9kdWxhckFQSXMuc2V0TG9nTGV2ZWwsXHJcbiAgICAgICAgb25Mb2c6IG1vZHVsYXJBUElzLm9uTG9nLFxyXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICBhcHBzOiBudWxsLFxyXG4gICAgICAgIFNES19WRVJTSU9OOiBtb2R1bGFyQVBJcy5TREtfVkVSU0lPTixcclxuICAgICAgICBJTlRFUk5BTDoge1xyXG4gICAgICAgICAgICByZWdpc3RlckNvbXBvbmVudDogcmVnaXN0ZXJDb21wb25lbnRDb21wYXQsXHJcbiAgICAgICAgICAgIHJlbW92ZUFwcCxcclxuICAgICAgICAgICAgdXNlQXNTZXJ2aWNlLFxyXG4gICAgICAgICAgICBtb2R1bGFyQVBJc1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvLyBJbmplY3QgYSBjaXJjdWxhciBkZWZhdWx0IGV4cG9ydCB0byBhbGxvdyBCYWJlbCB1c2VycyB3aG8gd2VyZSBwcmV2aW91c2x5XHJcbiAgICAvLyB1c2luZzpcclxuICAgIC8vXHJcbiAgICAvLyAgIGltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7XHJcbiAgICAvLyAgIHdoaWNoIGJlY29tZXM6IHZhciBmaXJlYmFzZSA9IHJlcXVpcmUoJ2ZpcmViYXNlJykuZGVmYXVsdDtcclxuICAgIC8vXHJcbiAgICAvLyBpbnN0ZWFkIG9mXHJcbiAgICAvL1xyXG4gICAgLy8gICBpbXBvcnQgKiBhcyBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7XHJcbiAgICAvLyAgIHdoaWNoIGJlY29tZXM6IHZhciBmaXJlYmFzZSA9IHJlcXVpcmUoJ2ZpcmViYXNlJyk7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgbmFtZXNwYWNlWydkZWZhdWx0J10gPSBuYW1lc3BhY2U7XHJcbiAgICAvLyBmaXJlYmFzZS5hcHBzIGlzIGEgcmVhZC1vbmx5IGdldHRlci5cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuYW1lc3BhY2UsICdhcHBzJywge1xyXG4gICAgICAgIGdldDogZ2V0QXBwc1xyXG4gICAgfSk7XHJcbiAgICAvKipcclxuICAgICAqIENhbGxlZCBieSBBcHAuZGVsZXRlKCkgLSBidXQgYmVmb3JlIGFueSBzZXJ2aWNlcyBhc3NvY2lhdGVkIHdpdGggdGhlIEFwcFxyXG4gICAgICogYXJlIGRlbGV0ZWQuXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIHJlbW92ZUFwcChuYW1lKSB7XHJcbiAgICAgICAgZGVsZXRlIGFwcHNbbmFtZV07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldCB0aGUgQXBwIG9iamVjdCBmb3IgYSBnaXZlbiBuYW1lIChvciBERUZBVUxUKS5cclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gYXBwKG5hbWUpIHtcclxuICAgICAgICBuYW1lID0gbmFtZSB8fCBtb2R1bGFyQVBJcy5fREVGQVVMVF9FTlRSWV9OQU1FO1xyXG4gICAgICAgIGlmICghY29udGFpbnMoYXBwcywgbmFtZSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJuby1hcHBcIiAvKiBOT19BUFAgKi8sIHsgYXBwTmFtZTogbmFtZSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFwcHNbbmFtZV07XHJcbiAgICB9XHJcbiAgICAvLyBAdHMtaWdub3JlXHJcbiAgICBhcHBbJ0FwcCddID0gZmlyZWJhc2VBcHBJbXBsO1xyXG4gICAgLyoqXHJcbiAgICAgKiBDcmVhdGUgYSBuZXcgQXBwIGluc3RhbmNlIChuYW1lIG11c3QgYmUgdW5pcXVlKS5cclxuICAgICAqXHJcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGlzIGlkZW1wb3RlbnQuIEl0IGNhbiBiZSBjYWxsZWQgbW9yZSB0aGFuIG9uY2UgYW5kIHJldHVybiB0aGUgc2FtZSBpbnN0YW5jZSB1c2luZyB0aGUgc2FtZSBvcHRpb25zIGFuZCBjb25maWcuXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGluaXRpYWxpemVBcHBDb21wYXQob3B0aW9ucywgcmF3Q29uZmlnID0ge30pIHtcclxuICAgICAgICBjb25zdCBhcHAgPSBtb2R1bGFyQVBJcy5pbml0aWFsaXplQXBwKG9wdGlvbnMsIHJhd0NvbmZpZyk7XHJcbiAgICAgICAgaWYgKGNvbnRhaW5zKGFwcHMsIGFwcC5uYW1lKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gYXBwc1thcHAubmFtZV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGFwcENvbXBhdCA9IG5ldyBmaXJlYmFzZUFwcEltcGwoYXBwLCBuYW1lc3BhY2UpO1xyXG4gICAgICAgIGFwcHNbYXBwLm5hbWVdID0gYXBwQ29tcGF0O1xyXG4gICAgICAgIHJldHVybiBhcHBDb21wYXQ7XHJcbiAgICB9XHJcbiAgICAvKlxyXG4gICAgICogUmV0dXJuIGFuIGFycmF5IG9mIGFsbCB0aGUgbm9uLWRlbGV0ZWQgRmlyZWJhc2VBcHBzLlxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBnZXRBcHBzKCkge1xyXG4gICAgICAgIC8vIE1ha2UgYSBjb3B5IHNvIGNhbGxlciBjYW5ub3QgbXV0YXRlIHRoZSBhcHBzIGxpc3QuXHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGFwcHMpLm1hcChuYW1lID0+IGFwcHNbbmFtZV0pO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gcmVnaXN0ZXJDb21wb25lbnRDb21wYXQoY29tcG9uZW50KSB7XHJcbiAgICAgICAgY29uc3QgY29tcG9uZW50TmFtZSA9IGNvbXBvbmVudC5uYW1lO1xyXG4gICAgICAgIGNvbnN0IGNvbXBvbmVudE5hbWVXaXRob3V0Q29tcGF0ID0gY29tcG9uZW50TmFtZS5yZXBsYWNlKCctY29tcGF0JywgJycpO1xyXG4gICAgICAgIGlmIChtb2R1bGFyQVBJcy5fcmVnaXN0ZXJDb21wb25lbnQoY29tcG9uZW50KSAmJlxyXG4gICAgICAgICAgICBjb21wb25lbnQudHlwZSA9PT0gXCJQVUJMSUNcIiAvKiBQVUJMSUMgKi8pIHtcclxuICAgICAgICAgICAgLy8gY3JlYXRlIHNlcnZpY2UgbmFtZXNwYWNlIGZvciBwdWJsaWMgY29tcG9uZW50c1xyXG4gICAgICAgICAgICAvLyBUaGUgU2VydmljZSBuYW1lc3BhY2UgaXMgYW4gYWNjZXNzb3IgZnVuY3Rpb24gLi4uXHJcbiAgICAgICAgICAgIGNvbnN0IHNlcnZpY2VOYW1lc3BhY2UgPSAoYXBwQXJnID0gYXBwKCkpID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGFwcEFyZ1tjb21wb25lbnROYW1lV2l0aG91dENvbXBhdF0gIT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBJbnZhbGlkIGFyZ3VtZW50LlxyXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgaGFwcGVucyBpbiB0aGUgZm9sbG93aW5nIGNhc2U6IGZpcmViYXNlLnN0b3JhZ2UoJ2dzOi8nKVxyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiaW52YWxpZC1hcHAtYXJndW1lbnRcIiAvKiBJTlZBTElEX0FQUF9BUkdVTUVOVCAqLywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBOYW1lOiBjb21wb25lbnROYW1lXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyBGb3J3YXJkIHNlcnZpY2UgaW5zdGFuY2UgbG9va3VwIHRvIHRoZSBGaXJlYmFzZUFwcC5cclxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXBwQXJnW2NvbXBvbmVudE5hbWVXaXRob3V0Q29tcGF0XSgpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAvLyAuLi4gYW5kIGEgY29udGFpbmVyIGZvciBzZXJ2aWNlLWxldmVsIHByb3BlcnRpZXMuXHJcbiAgICAgICAgICAgIGlmIChjb21wb25lbnQuc2VydmljZVByb3BzICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIGRlZXBFeHRlbmQoc2VydmljZU5hbWVzcGFjZSwgY29tcG9uZW50LnNlcnZpY2VQcm9wcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuICAgICAgICAgICAgbmFtZXNwYWNlW2NvbXBvbmVudE5hbWVXaXRob3V0Q29tcGF0XSA9IHNlcnZpY2VOYW1lc3BhY2U7XHJcbiAgICAgICAgICAgIC8vIFBhdGNoIHRoZSBGaXJlYmFzZUFwcEltcGwgcHJvdG90eXBlXHJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbiAgICAgICAgICAgIGZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGVbY29tcG9uZW50TmFtZVdpdGhvdXRDb21wYXRdID1cclxuICAgICAgICAgICAgICAgIC8vIFRPRE86IFRoZSBlc2xpbnQgZGlzYWJsZSBjYW4gYmUgcmVtb3ZlZCBhbmQgdGhlICdpZ25vcmVSZXN0QXJncydcclxuICAgICAgICAgICAgICAgIC8vIG9wdGlvbiBhZGRlZCB0byB0aGUgbm8tZXhwbGljaXQtYW55IHJ1bGUgd2hlbiBFU2xpbnQgcmVsZWFzZXMgaXQuXHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKC4uLmFyZ3MpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXJ2aWNlRnhuID0gdGhpcy5fZ2V0U2VydmljZS5iaW5kKHRoaXMsIGNvbXBvbmVudE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzZXJ2aWNlRnhuLmFwcGx5KHRoaXMsIGNvbXBvbmVudC5tdWx0aXBsZUluc3RhbmNlcyA/IGFyZ3MgOiBbXSk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY29tcG9uZW50LnR5cGUgPT09IFwiUFVCTElDXCIgLyogUFVCTElDICovXHJcbiAgICAgICAgICAgID8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuICAgICAgICAgICAgICAgIG5hbWVzcGFjZVtjb21wb25lbnROYW1lV2l0aG91dENvbXBhdF1cclxuICAgICAgICAgICAgOiBudWxsO1xyXG4gICAgfVxyXG4gICAgLy8gTWFwIHRoZSByZXF1ZXN0ZWQgc2VydmljZSB0byBhIHJlZ2lzdGVyZWQgc2VydmljZSBuYW1lXHJcbiAgICAvLyAodXNlZCB0byBtYXAgYXV0aCB0byBzZXJ2ZXJBdXRoIHNlcnZpY2Ugd2hlbiBuZWVkZWQpLlxyXG4gICAgZnVuY3Rpb24gdXNlQXNTZXJ2aWNlKGFwcCwgbmFtZSkge1xyXG4gICAgICAgIGlmIChuYW1lID09PSAnc2VydmVyQXV0aCcpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHVzZVNlcnZpY2UgPSBuYW1lO1xyXG4gICAgICAgIHJldHVybiB1c2VTZXJ2aWNlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5hbWVzcGFjZTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUmV0dXJuIGEgZmlyZWJhc2UgbmFtZXNwYWNlIG9iamVjdC5cclxuICpcclxuICogSW4gcHJvZHVjdGlvbiwgdGhpcyB3aWxsIGJlIGNhbGxlZCBleGFjdGx5IG9uY2UgYW5kIHRoZSByZXN1bHRcclxuICogYXNzaWduZWQgdG8gdGhlICdmaXJlYmFzZScgZ2xvYmFsLiAgSXQgbWF5IGJlIGNhbGxlZCBtdWx0aXBsZSB0aW1lc1xyXG4gKiBpbiB1bml0IHRlc3RzLlxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlRmlyZWJhc2VOYW1lc3BhY2UoKSB7XHJcbiAgICBjb25zdCBuYW1lc3BhY2UgPSBjcmVhdGVGaXJlYmFzZU5hbWVzcGFjZUNvcmUoRmlyZWJhc2VBcHBJbXBsKTtcclxuICAgIG5hbWVzcGFjZS5JTlRFUk5BTCA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgbmFtZXNwYWNlLklOVEVSTkFMKSwgeyBjcmVhdGVGaXJlYmFzZU5hbWVzcGFjZSxcclxuICAgICAgICBleHRlbmROYW1lc3BhY2UsXHJcbiAgICAgICAgY3JlYXRlU3Vic2NyaWJlLFxyXG4gICAgICAgIEVycm9yRmFjdG9yeSxcclxuICAgICAgICBkZWVwRXh0ZW5kIH0pO1xyXG4gICAgLyoqXHJcbiAgICAgKiBQYXRjaCB0aGUgdG9wLWxldmVsIGZpcmViYXNlIG5hbWVzcGFjZSB3aXRoIGFkZGl0aW9uYWwgcHJvcGVydGllcy5cclxuICAgICAqXHJcbiAgICAgKiBmaXJlYmFzZS5JTlRFUk5BTC5leHRlbmROYW1lc3BhY2UoKVxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBleHRlbmROYW1lc3BhY2UocHJvcHMpIHtcclxuICAgICAgICBkZWVwRXh0ZW5kKG5hbWVzcGFjZSwgcHJvcHMpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5hbWVzcGFjZTtcclxufVxyXG5jb25zdCBmaXJlYmFzZSQxID0gY3JlYXRlRmlyZWJhc2VOYW1lc3BhY2UoKTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgbG9nZ2VyID0gbmV3IExvZ2dlcignQGZpcmViYXNlL2FwcC1jb21wYXQnKTtcblxuY29uc3QgbmFtZSA9IFwiQGZpcmViYXNlL2FwcC1jb21wYXRcIjtcbmNvbnN0IHZlcnNpb24gPSBcIjAuMS4xMlwiO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5mdW5jdGlvbiByZWdpc3RlckNvcmVDb21wb25lbnRzKHZhcmlhbnQpIHtcclxuICAgIC8vIFJlZ2lzdGVyIGBhcHBgIHBhY2thZ2UuXHJcbiAgICByZWdpc3RlclZlcnNpb24obmFtZSwgdmVyc2lvbiwgdmFyaWFudCk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLy8gRmlyZWJhc2UgTGl0ZSBkZXRlY3Rpb25cclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuaWYgKGlzQnJvd3NlcigpICYmIHNlbGYuZmlyZWJhc2UgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgbG9nZ2VyLndhcm4oYFxuICAgIFdhcm5pbmc6IEZpcmViYXNlIGlzIGFscmVhZHkgZGVmaW5lZCBpbiB0aGUgZ2xvYmFsIHNjb3BlLiBQbGVhc2UgbWFrZSBzdXJlXG4gICAgRmlyZWJhc2UgbGlicmFyeSBpcyBvbmx5IGxvYWRlZCBvbmNlLlxuICBgKTtcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxyXG4gICAgY29uc3Qgc2RrVmVyc2lvbiA9IHNlbGYuZmlyZWJhc2UuU0RLX1ZFUlNJT047XHJcbiAgICBpZiAoc2RrVmVyc2lvbiAmJiBzZGtWZXJzaW9uLmluZGV4T2YoJ0xJVEUnKSA+PSAwKSB7XHJcbiAgICAgICAgbG9nZ2VyLndhcm4oYFxuICAgIFdhcm5pbmc6IFlvdSBhcmUgdHJ5aW5nIHRvIGxvYWQgRmlyZWJhc2Ugd2hpbGUgdXNpbmcgRmlyZWJhc2UgUGVyZm9ybWFuY2Ugc3RhbmRhbG9uZSBzY3JpcHQuXG4gICAgWW91IHNob3VsZCBsb2FkIEZpcmViYXNlIFBlcmZvcm1hbmNlIHdpdGggdGhpcyBpbnN0YW5jZSBvZiBGaXJlYmFzZSB0byBhdm9pZCBsb2FkaW5nIGR1cGxpY2F0ZSBjb2RlLlxuICAgIGApO1xyXG4gICAgfVxyXG59XHJcbmNvbnN0IGZpcmViYXNlID0gZmlyZWJhc2UkMTtcclxucmVnaXN0ZXJDb3JlQ29tcG9uZW50cygpO1xuXG5leHBvcnQgeyBmaXJlYmFzZSBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20yMDE3LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js\n");

/***/ })

});